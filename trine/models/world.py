#autogenerated by sqlautocode
"""
    trine.models.world
    ~~~~~~~~~~~~~~~~~~

    Contains table definitions for the ``world`` TrinityCore database.

    Tested and up-to-date with TDB 335.49 (2012/09/15).

    :copyright: Copyright 2012 by David Gidwani
    :license: BSD, see LICENSE for details.
"""
from trine.models import DeclarativeBase

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation

metadata = DeclarativeBase.metadata


creature_classlevelstats = Table(u'creature_classlevelstats', metadata,
    Column(u'level', Integer(), nullable=False),
    Column(u'class', Integer(), nullable=False),
    Column(u'basehp0', SMALLINT(), nullable=False),
    Column(u'basehp1', SMALLINT(), nullable=False),
    Column(u'basehp2', SMALLINT(), nullable=False),
    Column(u'basemana', SMALLINT(), nullable=False),
    Column(u'basearmor', SMALLINT(), nullable=False),
)

event_scripts = Table(u'event_scripts', metadata,
    Column(u'id', Integer(), nullable=False),
    Column(u'delay', INTEGER(), nullable=False),
    Column(u'command', Integer(), nullable=False),
    Column(u'datalong', Integer(), nullable=False),
    Column(u'datalong2', INTEGER(), nullable=False),
    Column(u'dataint', INTEGER(), nullable=False),
    Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'z', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'o', FLOAT(precision=None, asdecimal=False), nullable=False),
)

game_event_arena_seasons = Table(u'game_event_arena_seasons', metadata,
    Column(u'eventEntry', Integer(), nullable=False),
    Column(u'season', Integer(), nullable=False),
)

gameobject_scripts = Table(u'gameobject_scripts', metadata,
    Column(u'id', Integer(), nullable=False),
    Column(u'delay', INTEGER(), nullable=False),
    Column(u'command', Integer(), nullable=False),
    Column(u'datalong', Integer(), nullable=False),
    Column(u'datalong2', INTEGER(), nullable=False),
    Column(u'dataint', INTEGER(), nullable=False),
    Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'z', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'o', FLOAT(precision=None, asdecimal=False), nullable=False),
)

ip2nation = Table(u'ip2nation', metadata,
    Column(u'ip', INTEGER(), nullable=False),
    Column(u'country', CHAR(length=2, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
)

# playercreateinfo_item = Table(u'playercreateinfo_item', metadata,
#     Column(u'race', Integer(), nullable=False),
#     Column(u'class', Integer(), nullable=False),
#     Column(u'itemid', Integer(), nullable=False),
#     Column(u'amount', Integer(), nullable=False),
# )

quest_end_scripts = Table(u'quest_end_scripts', metadata,
    Column(u'id', Integer(), nullable=False),
    Column(u'delay', INTEGER(), nullable=False),
    Column(u'command', Integer(), nullable=False),
    Column(u'datalong', Integer(), nullable=False),
    Column(u'datalong2', INTEGER(), nullable=False),
    Column(u'dataint', INTEGER(), nullable=False),
    Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'z', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'o', FLOAT(precision=None, asdecimal=False), nullable=False),
)

quest_poi = Table(u'quest_poi', metadata,
    Column(u'questId', INTEGER(), nullable=False),
    Column(u'id', INTEGER(), nullable=False),
    Column(u'objIndex', INTEGER(), nullable=False),
    Column(u'mapid', INTEGER(), nullable=False),
    Column(u'WorldMapAreaId', INTEGER(), nullable=False),
    Column(u'FloorId', INTEGER(), nullable=False),
    Column(u'unk3', INTEGER(), nullable=False),
    Column(u'unk4', INTEGER(), nullable=False),
)

quest_poi_points = Table(u'quest_poi_points', metadata,
    Column(u'questId', INTEGER(), nullable=False),
    Column(u'id', INTEGER(), nullable=False),
    Column(u'idx', INTEGER(), nullable=False),
    Column(u'x', INTEGER(), nullable=False),
    Column(u'y', INTEGER(), nullable=False),
)

quest_start_scripts = Table(u'quest_start_scripts', metadata,
    Column(u'id', Integer(), nullable=False),
    Column(u'delay', INTEGER(), nullable=False),
    Column(u'command', Integer(), nullable=False),
    Column(u'datalong', Integer(), nullable=False),
    Column(u'datalong2', INTEGER(), nullable=False),
    Column(u'dataint', INTEGER(), nullable=False),
    Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'z', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'o', FLOAT(precision=None, asdecimal=False), nullable=False),
)

spell_enchant_proc_data = Table(u'spell_enchant_proc_data', metadata,
    Column(u'entry', INTEGER(), nullable=False),
    Column(u'customChance', INTEGER(), nullable=False),
    Column(u'PPMChance', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'procEx', INTEGER(), nullable=False),
)

spell_linked_spell = Table(u'spell_linked_spell', metadata,
    Column(u'spell_trigger', Integer(), nullable=False),
    Column(u'spell_effect', Integer(), nullable=False),
    Column(u'type', Integer(), nullable=False),
    Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
)

spell_script_names = Table(u'spell_script_names', metadata,
    Column(u'spell_id', INTEGER(), nullable=False),
    Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
)

spell_scripts = Table(u'spell_scripts', metadata,
    Column(u'id', Integer(), nullable=False),
    Column(u'effIndex', Integer(), nullable=False),
    Column(u'delay', INTEGER(), nullable=False),
    Column(u'command', Integer(), nullable=False),
    Column(u'datalong', Integer(), nullable=False),
    Column(u'datalong2', INTEGER(), nullable=False),
    Column(u'dataint', INTEGER(), nullable=False),
    Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'z', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'o', FLOAT(precision=None, asdecimal=False), nullable=False),
)

version = Table(u'version', metadata,
    Column(u'core_version', VARCHAR(length=120, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    Column(u'core_revision', VARCHAR(length=120, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    Column(u'db_version', VARCHAR(length=120, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    Column(u'cache_id', INTEGER()),
)

waypoint_data = Table(u'waypoint_data', metadata,
    Column(u'id', INTEGER(), nullable=False),
    Column(u'point', Integer(), nullable=False),
    Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'orientation', FLOAT(precision=None, asdecimal=False), nullable=False),
    Column(u'delay', INTEGER(), nullable=False),
    Column(u'move_flag', Integer(), nullable=False),
    Column(u'action', INTEGER(), nullable=False),
    Column(u'action_chance', SMALLINT(), nullable=False),
    Column(u'wpguid', INTEGER(), nullable=False),
)

class AccessRequirement(DeclarativeBase):
    __tablename__ = 'access_requirement'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    completed_achievement = Column(u'completed_achievement', Integer(), nullable=False)
    difficulty = Column(u'difficulty', Integer(), primary_key=True, nullable=False)
    item = Column(u'item', Integer(), nullable=False)
    item2 = Column(u'item2', Integer(), nullable=False)
    level_max = Column(u'level_max', Integer(), nullable=False)
    level_min = Column(u'level_min', Integer(), nullable=False)
    mapId = Column(u'mapId', Integer(), primary_key=True, nullable=False)
    quest_done_A = Column(u'quest_done_A', Integer(), nullable=False)
    quest_done_H = Column(u'quest_done_H', Integer(), nullable=False)
    quest_failed_text = Column(u'quest_failed_text', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class AchievementCriteriaData(DeclarativeBase):
    __tablename__ = 'achievement_criteria_data'

    __table_args__ = {}

    #column definitions
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    criteria_id = Column(u'criteria_id', Integer(), primary_key=True, nullable=False)
    type = Column(u'type', Integer(), primary_key=True, nullable=False)
    value1 = Column(u'value1', Integer(), nullable=False)
    value2 = Column(u'value2', Integer(), nullable=False)

    #relation definitions


class AchievementDbc(DeclarativeBase):
    __tablename__ = 'achievement_dbc'

    __table_args__ = {}

    #column definitions
    ID = Column(u'ID', INTEGER(), primary_key=True, nullable=False)
    count = Column(u'count', INTEGER(), nullable=False)
    flags = Column(u'flags', INTEGER(), nullable=False)
    mapID = Column(u'mapID', INTEGER(), nullable=False)
    points = Column(u'points', INTEGER(), nullable=False)
    refAchievement = Column(u'refAchievement', INTEGER(), nullable=False)
    requiredFaction = Column(u'requiredFaction', INTEGER(), nullable=False)

    #relation definitions


class AchievementReward(DeclarativeBase):
    __tablename__ = 'achievement_reward'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    item = Column(u'item', Integer(), nullable=False)
    sender = Column(u'sender', Integer(), nullable=False)
    subject = Column(u'subject', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text = Column(u'text', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    title_A = Column(u'title_A', Integer(), nullable=False)
    title_H = Column(u'title_H', Integer(), nullable=False)

    #relation definitions


class AreatriggerInvolvedrelation(DeclarativeBase):
    __tablename__ = 'areatrigger_involvedrelation'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), nullable=False)

    #relation definitions


class AreatriggerScript(DeclarativeBase):
    __tablename__ = 'areatrigger_scripts'

    __table_args__ = {}

    #column definitions
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class AreatriggerTavern(DeclarativeBase):
    __tablename__ = 'areatrigger_tavern'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    name = Column(u'name', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class AreatriggerTeleport(DeclarativeBase):
    __tablename__ = 'areatrigger_teleport'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    name = Column(u'name', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    target_map = Column(u'target_map', SMALLINT(), nullable=False)
    target_orientation = Column(u'target_orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_position_x = Column(u'target_position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_position_y = Column(u'target_position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_position_z = Column(u'target_position_z', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class Autobroadcast(DeclarativeBase):
    __tablename__ = 'autobroadcast'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', INTEGER(), primary_key=True, nullable=False)
    text = Column(u'text', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class BattlegroundTemplate(DeclarativeBase):
    __tablename__ = 'battleground_template'

    __table_args__ = {}

    #column definitions
    AllianceStartLoc = Column(u'AllianceStartLoc', Integer(), nullable=False)
    AllianceStartO = Column(u'AllianceStartO', FLOAT(precision=None, asdecimal=False), nullable=False)
    Comment = Column(u'Comment', CHAR(length=32, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    HordeStartLoc = Column(u'HordeStartLoc', Integer(), nullable=False)
    HordeStartO = Column(u'HordeStartO', FLOAT(precision=None, asdecimal=False), nullable=False)
    MaxLvl = Column(u'MaxLvl', Integer(), nullable=False)
    MaxPlayersPerTeam = Column(u'MaxPlayersPerTeam', SMALLINT(), nullable=False)
    MinLvl = Column(u'MinLvl', Integer(), nullable=False)
    MinPlayersPerTeam = Column(u'MinPlayersPerTeam', SMALLINT(), nullable=False)
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    StartMaxDist = Column(u'StartMaxDist', FLOAT(precision=None, asdecimal=False), nullable=False)
    Weight = Column(u'Weight', Integer(), nullable=False)
    id = Column(u'id', Integer(), primary_key=True, nullable=False)

    #relation definitions


class BattlemasterEntry(DeclarativeBase):
    __tablename__ = 'battlemaster_entry'

    __table_args__ = {}

    #column definitions
    bg_template = Column(u'bg_template', Integer(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class Command(DeclarativeBase):
    __tablename__ = 'command'

    __table_args__ = {}

    #column definitions
    help = Column(u'help', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    name = Column(u'name', VARCHAR(length=50, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False)
    security = Column(u'security', Integer(), nullable=False)

    #relation definitions


class Condition(DeclarativeBase):
    __tablename__ = 'conditions'

    __table_args__ = {}

    #column definitions
    Comment = Column(u'Comment', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ConditionTarget = Column(u'ConditionTarget', Integer(), primary_key=True, nullable=False)
    ConditionTypeOrReference = Column(u'ConditionTypeOrReference', Integer(), primary_key=True, nullable=False)
    ConditionValue1 = Column(u'ConditionValue1', Integer(), primary_key=True, nullable=False)
    ConditionValue2 = Column(u'ConditionValue2', Integer(), primary_key=True, nullable=False)
    ConditionValue3 = Column(u'ConditionValue3', Integer(), primary_key=True, nullable=False)
    ElseGroup = Column(u'ElseGroup', Integer(), primary_key=True, nullable=False)
    ErrorTextId = Column(u'ErrorTextId', Integer(), nullable=False)
    NegativeCondition = Column(u'NegativeCondition', Integer(), nullable=False)
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    SourceEntry = Column(u'SourceEntry', Integer(), primary_key=True, nullable=False)
    SourceGroup = Column(u'SourceGroup', Integer(), primary_key=True, nullable=False)
    SourceId = Column(u'SourceId', INTEGER(), primary_key=True, nullable=False)
    SourceTypeOrReferenceId = Column(u'SourceTypeOrReferenceId', Integer(), primary_key=True, nullable=False)

    #relation definitions


class Creature(DeclarativeBase):
    __tablename__ = 'creature'

    __table_args__ = {}

    #column definitions
    MovementType = Column(u'MovementType', Integer(), nullable=False)
    curhealth = Column(u'curhealth', INTEGER(), nullable=False)
    curmana = Column(u'curmana', INTEGER(), nullable=False)
    currentwaypoint = Column(u'currentwaypoint', Integer(), nullable=False)
    dynamicflags = Column(u'dynamicflags', INTEGER(), nullable=False)
    equipment_id = Column(u'equipment_id', Integer(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    id = Column(u'id', Integer(), nullable=False)
    map = Column(u'map', SMALLINT(), nullable=False)
    modelid = Column(u'modelid', Integer(), nullable=False)
    npcflag = Column(u'npcflag', INTEGER(), nullable=False)
    orientation = Column(u'orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    phaseMask = Column(u'phaseMask', SMALLINT(), nullable=False)
    position_x = Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_y = Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_z = Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False)
    spawnMask = Column(u'spawnMask', Integer(), nullable=False)
    spawndist = Column(u'spawndist', FLOAT(precision=None, asdecimal=False), nullable=False)
    spawntimesecs = Column(u'spawntimesecs', INTEGER(), nullable=False)
    unit_flags = Column(u'unit_flags', INTEGER(), nullable=False)

    #relation definitions


class CreatureAddon(DeclarativeBase):
    __tablename__ = 'creature_addon'

    __table_args__ = {}

    #column definitions
    auras = Column(u'auras', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    bytes1 = Column(u'bytes1', INTEGER(), nullable=False)
    bytes2 = Column(u'bytes2', INTEGER(), nullable=False)
    emote = Column(u'emote', INTEGER(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    mount = Column(u'mount', Integer(), nullable=False)
    path_id = Column(u'path_id', INTEGER(), nullable=False)

    #relation definitions


class CreatureAiScript(DeclarativeBase):
    __tablename__ = 'creature_ai_scripts'

    __table_args__ = {}

    #column definitions
    action1_param1 = Column(u'action1_param1', INTEGER(), nullable=False)
    action1_param2 = Column(u'action1_param2', INTEGER(), nullable=False)
    action1_param3 = Column(u'action1_param3', INTEGER(), nullable=False)
    action1_type = Column(u'action1_type', Integer(), nullable=False)
    action2_param1 = Column(u'action2_param1', INTEGER(), nullable=False)
    action2_param2 = Column(u'action2_param2', INTEGER(), nullable=False)
    action2_param3 = Column(u'action2_param3', INTEGER(), nullable=False)
    action2_type = Column(u'action2_type', Integer(), nullable=False)
    action3_param1 = Column(u'action3_param1', INTEGER(), nullable=False)
    action3_param2 = Column(u'action3_param2', INTEGER(), nullable=False)
    action3_param3 = Column(u'action3_param3', INTEGER(), nullable=False)
    action3_type = Column(u'action3_type', Integer(), nullable=False)
    comment = Column(u'comment', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    creature_id = Column(u'creature_id', INTEGER(), nullable=False)
    event_chance = Column(u'event_chance', INTEGER(), nullable=False)
    event_flags = Column(u'event_flags', INTEGER(), nullable=False)
    event_inverse_phase_mask = Column(u'event_inverse_phase_mask', INTEGER(), nullable=False)
    event_param1 = Column(u'event_param1', INTEGER(), nullable=False)
    event_param2 = Column(u'event_param2', INTEGER(), nullable=False)
    event_param3 = Column(u'event_param3', INTEGER(), nullable=False)
    event_param4 = Column(u'event_param4', INTEGER(), nullable=False)
    event_type = Column(u'event_type', Integer(), nullable=False)
    id = Column(u'id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class CreatureAiSummon(DeclarativeBase):
    __tablename__ = 'creature_ai_summons'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    id = Column(u'id', INTEGER(), primary_key=True, nullable=False)
    orientation = Column(u'orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_x = Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_y = Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_z = Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False)
    spawntimesecs = Column(u'spawntimesecs', INTEGER(), nullable=False)

    #relation definitions


class CreatureAiText(DeclarativeBase):
    __tablename__ = 'creature_ai_texts'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_default = Column(u'content_default', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    content_loc1 = Column(u'content_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc2 = Column(u'content_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc3 = Column(u'content_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc4 = Column(u'content_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc5 = Column(u'content_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc6 = Column(u'content_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc7 = Column(u'content_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc8 = Column(u'content_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    emote = Column(u'emote', SMALLINT(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    language = Column(u'language', Integer(), nullable=False)
    sound = Column(u'sound', Integer(), nullable=False)
    type = Column(u'type', Integer(), nullable=False)

    #relation definitions


class CreatureEquipTemplate(DeclarativeBase):
    __tablename__ = 'creature_equip_template'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', SMALLINT(), primary_key=True, nullable=False)
    itemEntry1 = Column(u'itemEntry1', Integer(), nullable=False)
    itemEntry2 = Column(u'itemEntry2', Integer(), nullable=False)
    itemEntry3 = Column(u'itemEntry3', Integer(), nullable=False)

    #relation definitions


class CreatureFormation(DeclarativeBase):
    __tablename__ = 'creature_formations'

    __table_args__ = {}

    #column definitions
    angle = Column(u'angle', FLOAT(precision=None, asdecimal=False), nullable=False)
    dist = Column(u'dist', FLOAT(precision=None, asdecimal=False), nullable=False)
    groupAI = Column(u'groupAI', INTEGER(), nullable=False)
    leaderGUID = Column(u'leaderGUID', INTEGER(), nullable=False)
    memberGUID = Column(u'memberGUID', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class CreatureInvolvedrelation(DeclarativeBase):
    __tablename__ = 'creature_involvedrelation'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class CreatureLootTemplate(DeclarativeBase):
    __tablename__ = 'creature_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class CreatureModelInfo(DeclarativeBase):
    __tablename__ = 'creature_model_info'

    __table_args__ = {}

    #column definitions
    bounding_radius = Column(u'bounding_radius', FLOAT(precision=None, asdecimal=False), nullable=False)
    combat_reach = Column(u'combat_reach', FLOAT(precision=None, asdecimal=False), nullable=False)
    gender = Column(u'gender', Integer(), nullable=False)
    modelid = Column(u'modelid', Integer(), primary_key=True, nullable=False)
    modelid_other_gender = Column(u'modelid_other_gender', Integer(), nullable=False)

    #relation definitions


class CreatureOnkillReputation(DeclarativeBase):
    __tablename__ = 'creature_onkill_reputation'

    __table_args__ = {}

    #column definitions
    IsTeamAward1 = Column(u'IsTeamAward1', Integer(), nullable=False)
    IsTeamAward2 = Column(u'IsTeamAward2', Integer(), nullable=False)
    MaxStanding1 = Column(u'MaxStanding1', Integer(), nullable=False)
    MaxStanding2 = Column(u'MaxStanding2', Integer(), nullable=False)
    RewOnKillRepFaction1 = Column(u'RewOnKillRepFaction1', SMALLINT(), nullable=False)
    RewOnKillRepFaction2 = Column(u'RewOnKillRepFaction2', SMALLINT(), nullable=False)
    RewOnKillRepValue1 = Column(u'RewOnKillRepValue1', Integer(), nullable=False)
    RewOnKillRepValue2 = Column(u'RewOnKillRepValue2', Integer(), nullable=False)
    TeamDependent = Column(u'TeamDependent', Integer(), nullable=False)
    creature_id = Column(u'creature_id', Integer(), primary_key=True, nullable=False)

    #relation definitions


class CreatureQuestrelation(DeclarativeBase):
    __tablename__ = 'creature_questrelation'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class CreatureTemplate(DeclarativeBase):
    __tablename__ = 'creature_template'

    __table_args__ = {}

    #column definitions
    AIName = Column(u'AIName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    Armor_mod = Column(u'Armor_mod', FLOAT(precision=None, asdecimal=False), nullable=False)
    Health_mod = Column(u'Health_mod', FLOAT(precision=None, asdecimal=False), nullable=False)
    HoverHeight = Column(u'HoverHeight', FLOAT(precision=None, asdecimal=False), nullable=False)
    IconName = Column(u'IconName', CHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    InhabitType = Column(u'InhabitType', Integer(), nullable=False)
    KillCredit1 = Column(u'KillCredit1', INTEGER(), nullable=False)
    KillCredit2 = Column(u'KillCredit2', INTEGER(), nullable=False)
    Mana_mod = Column(u'Mana_mod', FLOAT(precision=None, asdecimal=False), nullable=False)
    MovementType = Column(u'MovementType', Integer(), nullable=False)
    PetSpellDataId = Column(u'PetSpellDataId', Integer(), nullable=False)
    RacialLeader = Column(u'RacialLeader', Integer(), nullable=False)
    RegenHealth = Column(u'RegenHealth', Integer(), nullable=False)
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    VehicleId = Column(u'VehicleId', Integer(), nullable=False)
    WDBVerified = Column(u'WDBVerified', SMALLINT())
    attackpower = Column(u'attackpower', INTEGER(), nullable=False)
    baseattacktime = Column(u'baseattacktime', INTEGER(), nullable=False)
    difficulty_entry_1 = Column(u'difficulty_entry_1', Integer(), nullable=False)
    difficulty_entry_2 = Column(u'difficulty_entry_2', Integer(), nullable=False)
    difficulty_entry_3 = Column(u'difficulty_entry_3', Integer(), nullable=False)
    dmg_multiplier = Column(u'dmg_multiplier', FLOAT(precision=None, asdecimal=False), nullable=False)
    dmgschool = Column(u'dmgschool', Integer(), nullable=False)
    dynamicflags = Column(u'dynamicflags', INTEGER(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    equipment_id = Column(u'equipment_id', Integer(), nullable=False)
    exp = Column(u'exp', SMALLINT(), nullable=False)
    faction_A = Column(u'faction_A', SMALLINT(), nullable=False)
    faction_H = Column(u'faction_H', SMALLINT(), nullable=False)
    family = Column(u'family', Integer(), nullable=False)
    flags_extra = Column(u'flags_extra', INTEGER(), nullable=False)
    gossip_menu_id = Column(u'gossip_menu_id', Integer(), nullable=False)
    lootid = Column(u'lootid', Integer(), nullable=False)
    maxdmg = Column(u'maxdmg', FLOAT(precision=None, asdecimal=False), nullable=False)
    maxgold = Column(u'maxgold', Integer(), nullable=False)
    maxlevel = Column(u'maxlevel', Integer(), nullable=False)
    maxrangedmg = Column(u'maxrangedmg', FLOAT(precision=None, asdecimal=False), nullable=False)
    mechanic_immune_mask = Column(u'mechanic_immune_mask', INTEGER(), nullable=False)
    mindmg = Column(u'mindmg', FLOAT(precision=None, asdecimal=False), nullable=False)
    mingold = Column(u'mingold', Integer(), nullable=False)
    minlevel = Column(u'minlevel', Integer(), nullable=False)
    minrangedmg = Column(u'minrangedmg', FLOAT(precision=None, asdecimal=False), nullable=False)
    modelid1 = Column(u'modelid1', Integer(), nullable=False)
    modelid2 = Column(u'modelid2', Integer(), nullable=False)
    modelid3 = Column(u'modelid3', Integer(), nullable=False)
    modelid4 = Column(u'modelid4', Integer(), nullable=False)
    movementId = Column(u'movementId', INTEGER(), nullable=False)
    name = Column(u'name', CHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    npcflag = Column(u'npcflag', INTEGER(), nullable=False)
    pickpocketloot = Column(u'pickpocketloot', Integer(), nullable=False)
    questItem1 = Column(u'questItem1', INTEGER(), nullable=False)
    questItem2 = Column(u'questItem2', INTEGER(), nullable=False)
    questItem3 = Column(u'questItem3', INTEGER(), nullable=False)
    questItem4 = Column(u'questItem4', INTEGER(), nullable=False)
    questItem5 = Column(u'questItem5', INTEGER(), nullable=False)
    questItem6 = Column(u'questItem6', INTEGER(), nullable=False)
    rangeattacktime = Column(u'rangeattacktime', INTEGER(), nullable=False)
    rangedattackpower = Column(u'rangedattackpower', SMALLINT(), nullable=False)
    rank = Column(u'rank', Integer(), nullable=False)
    resistance1 = Column(u'resistance1', SMALLINT(), nullable=False)
    resistance2 = Column(u'resistance2', SMALLINT(), nullable=False)
    resistance3 = Column(u'resistance3', SMALLINT(), nullable=False)
    resistance4 = Column(u'resistance4', SMALLINT(), nullable=False)
    resistance5 = Column(u'resistance5', SMALLINT(), nullable=False)
    resistance6 = Column(u'resistance6', SMALLINT(), nullable=False)
    scale = Column(u'scale', FLOAT(precision=None, asdecimal=False), nullable=False)
    skinloot = Column(u'skinloot', Integer(), nullable=False)
    speed_run = Column(u'speed_run', FLOAT(precision=None, asdecimal=False), nullable=False)
    speed_walk = Column(u'speed_walk', FLOAT(precision=None, asdecimal=False), nullable=False)
    spell1 = Column(u'spell1', Integer(), nullable=False)
    spell2 = Column(u'spell2', Integer(), nullable=False)
    spell3 = Column(u'spell3', Integer(), nullable=False)
    spell4 = Column(u'spell4', Integer(), nullable=False)
    spell5 = Column(u'spell5', Integer(), nullable=False)
    spell6 = Column(u'spell6', Integer(), nullable=False)
    spell7 = Column(u'spell7', Integer(), nullable=False)
    spell8 = Column(u'spell8', Integer(), nullable=False)
    subname = Column(u'subname', CHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    trainer_class = Column(u'trainer_class', Integer(), nullable=False)
    trainer_race = Column(u'trainer_race', Integer(), nullable=False)
    trainer_spell = Column(u'trainer_spell', Integer(), nullable=False)
    trainer_type = Column(u'trainer_type', Integer(), nullable=False)
    type = Column(u'type', Integer(), nullable=False)
    type_flags = Column(u'type_flags', INTEGER(), nullable=False)
    unit_class = Column(u'unit_class', Integer(), nullable=False)
    unit_flags = Column(u'unit_flags', INTEGER(), nullable=False)

    #relation definitions


class CreatureTemplateAddon(DeclarativeBase):
    __tablename__ = 'creature_template_addon'

    __table_args__ = {}

    #column definitions
    auras = Column(u'auras', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    bytes1 = Column(u'bytes1', INTEGER(), nullable=False)
    bytes2 = Column(u'bytes2', INTEGER(), nullable=False)
    emote = Column(u'emote', Integer(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    mount = Column(u'mount', Integer(), nullable=False)
    path_id = Column(u'path_id', INTEGER(), nullable=False)

    #relation definitions


class CreatureText(DeclarativeBase):
    __tablename__ = 'creature_text'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    duration = Column(u'duration', Integer(), nullable=False)
    emote = Column(u'emote', Integer(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), primary_key=True, nullable=False)
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    language = Column(u'language', Integer(), nullable=False)
    probability = Column(u'probability', FLOAT(precision=None, asdecimal=False), nullable=False)
    sound = Column(u'sound', Integer(), nullable=False)
    text = Column(u'text', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    type = Column(u'type', Integer(), nullable=False)

    #relation definitions


class CreatureTransport(DeclarativeBase):
    __tablename__ = 'creature_transport'

    __table_args__ = {}

    #column definitions
    TransOffsetO = Column(u'TransOffsetO', FLOAT(precision=None, asdecimal=False), nullable=False)
    TransOffsetX = Column(u'TransOffsetX', FLOAT(precision=None, asdecimal=False), nullable=False)
    TransOffsetY = Column(u'TransOffsetY', FLOAT(precision=None, asdecimal=False), nullable=False)
    TransOffsetZ = Column(u'TransOffsetZ', FLOAT(precision=None, asdecimal=False), nullable=False)
    emote = Column(u'emote', INTEGER(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    npc_entry = Column(u'npc_entry', INTEGER(), nullable=False)
    transport_entry = Column(u'transport_entry', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class CustomText(DeclarativeBase):
    __tablename__ = 'custom_texts'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_default = Column(u'content_default', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    content_loc1 = Column(u'content_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc2 = Column(u'content_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc3 = Column(u'content_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc4 = Column(u'content_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc5 = Column(u'content_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc6 = Column(u'content_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc7 = Column(u'content_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc8 = Column(u'content_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    emote = Column(u'emote', SMALLINT(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    language = Column(u'language', Integer(), nullable=False)
    sound = Column(u'sound', Integer(), nullable=False)
    type = Column(u'type', Integer(), nullable=False)

    #relation definitions


class DbScriptString(DeclarativeBase):
    __tablename__ = 'db_script_string'

    __table_args__ = {}

    #column definitions
    content_default = Column(u'content_default', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    content_loc1 = Column(u'content_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc2 = Column(u'content_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc3 = Column(u'content_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc4 = Column(u'content_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc5 = Column(u'content_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc6 = Column(u'content_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc7 = Column(u'content_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc8 = Column(u'content_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Disable(DeclarativeBase):
    __tablename__ = 'disables'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    entry = Column(u'entry', INTEGER(), primary_key=True, nullable=False)
    flags = Column(u'flags', Integer(), nullable=False)
    params_0 = Column(u'params_0', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    params_1 = Column(u'params_1', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    sourceType = Column(u'sourceType', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class DisenchantLootTemplate(DeclarativeBase):
    __tablename__ = 'disenchant_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class ExplorationBasexp(DeclarativeBase):
    __tablename__ = 'exploration_basexp'

    __table_args__ = {}

    #column definitions
    basexp = Column(u'basexp', Integer(), nullable=False)
    level = Column(u'level', Integer(), primary_key=True, nullable=False)

    #relation definitions


class FishingLootTemplate(DeclarativeBase):
    __tablename__ = 'fishing_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class GameEvent(DeclarativeBase):
    __tablename__ = 'game_event'

    __table_args__ = {}

    #column definitions
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    end_time = Column(u'end_time', TIMESTAMP(timezone=False), nullable=False)
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    holiday = Column(u'holiday', Integer(), nullable=False)
    length = Column(u'length', BigInteger(), nullable=False)
    occurence = Column(u'occurence', BigInteger(), nullable=False)
    start_time = Column(u'start_time', TIMESTAMP(timezone=False), nullable=False)
    world_event = Column(u'world_event', Integer(), nullable=False)

    #relation definitions


class GameEventBattlegroundHoliday(DeclarativeBase):
    __tablename__ = 'game_event_battleground_holiday'

    __table_args__ = {}

    #column definitions
    bgflag = Column(u'bgflag', INTEGER(), nullable=False)
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameEventCondition(DeclarativeBase):
    __tablename__ = 'game_event_condition'

    __table_args__ = {}

    #column definitions
    condition_id = Column(u'condition_id', Integer(), primary_key=True, nullable=False)
    description = Column(u'description', VARCHAR(length=25, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    done_world_state_field = Column(u'done_world_state_field', SMALLINT(), nullable=False)
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    max_world_state_field = Column(u'max_world_state_field', SMALLINT(), nullable=False)
    req_num = Column(u'req_num', FLOAT(precision=None, asdecimal=False))

    #relation definitions


class GameEventCreature(DeclarativeBase):
    __tablename__ = 'game_event_creature'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class GameEventCreatureQuest(DeclarativeBase):
    __tablename__ = 'game_event_creature_quest'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), nullable=False)
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameEventGameobject(DeclarativeBase):
    __tablename__ = 'game_event_gameobject'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class GameEventGameobjectQuest(DeclarativeBase):
    __tablename__ = 'game_event_gameobject_quest'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameEventModelEquip(DeclarativeBase):
    __tablename__ = 'game_event_model_equip'

    __table_args__ = {}

    #column definitions
    equipment_id = Column(u'equipment_id', Integer(), nullable=False)
    eventEntry = Column(u'eventEntry', Integer(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    modelid = Column(u'modelid', Integer(), nullable=False)

    #relation definitions


class GameEventNpcVendor(DeclarativeBase):
    __tablename__ = 'game_event_npc_vendor'

    __table_args__ = {}

    #column definitions
    ExtendedCost = Column(u'ExtendedCost', Integer(), nullable=False)
    eventEntry = Column(u'eventEntry', Integer(), nullable=False)
    guid = Column(u'guid', Integer(), primary_key=True, nullable=False)
    incrtime = Column(u'incrtime', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    slot = Column(u'slot', SMALLINT(), nullable=False)

    #relation definitions


class GameEventNpcflag(DeclarativeBase):
    __tablename__ = 'game_event_npcflag'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    guid = Column(u'guid', Integer(), primary_key=True, nullable=False)
    npcflag = Column(u'npcflag', INTEGER(), nullable=False)

    #relation definitions


class GameEventPool(DeclarativeBase):
    __tablename__ = 'game_event_pool'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), nullable=False)
    pool_entry = Column(u'pool_entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameEventPrerequisite(DeclarativeBase):
    __tablename__ = 'game_event_prerequisite'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    prerequisite_event = Column(u'prerequisite_event', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameEventQuestCondition(DeclarativeBase):
    __tablename__ = 'game_event_quest_condition'

    __table_args__ = {}

    #column definitions
    condition_id = Column(u'condition_id', Integer(), nullable=False)
    eventEntry = Column(u'eventEntry', Integer(), nullable=False)
    num = Column(u'num', FLOAT(precision=None, asdecimal=False))
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameEventSeasonalQuestrelation(DeclarativeBase):
    __tablename__ = 'game_event_seasonal_questrelation'

    __table_args__ = {}

    #column definitions
    eventEntry = Column(u'eventEntry', Integer(), primary_key=True, nullable=False)
    questId = Column(u'questId', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class GameGraveyardZone(DeclarativeBase):
    __tablename__ = 'game_graveyard_zone'

    __table_args__ = {}

    #column definitions
    faction = Column(u'faction', SMALLINT(), nullable=False)
    ghost_zone = Column(u'ghost_zone', Integer(), primary_key=True, nullable=False)
    id = Column(u'id', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameTele(DeclarativeBase):
    __tablename__ = 'game_tele'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    map = Column(u'map', SMALLINT(), nullable=False)
    name = Column(u'name', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    orientation = Column(u'orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_x = Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_y = Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_z = Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class GameWeather(DeclarativeBase):
    __tablename__ = 'game_weather'

    __table_args__ = {}

    #column definitions
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    fall_rain_chance = Column(u'fall_rain_chance', Integer(), nullable=False)
    fall_snow_chance = Column(u'fall_snow_chance', Integer(), nullable=False)
    fall_storm_chance = Column(u'fall_storm_chance', Integer(), nullable=False)
    spring_rain_chance = Column(u'spring_rain_chance', Integer(), nullable=False)
    spring_snow_chance = Column(u'spring_snow_chance', Integer(), nullable=False)
    spring_storm_chance = Column(u'spring_storm_chance', Integer(), nullable=False)
    summer_rain_chance = Column(u'summer_rain_chance', Integer(), nullable=False)
    summer_snow_chance = Column(u'summer_snow_chance', Integer(), nullable=False)
    summer_storm_chance = Column(u'summer_storm_chance', Integer(), nullable=False)
    winter_rain_chance = Column(u'winter_rain_chance', Integer(), nullable=False)
    winter_snow_chance = Column(u'winter_snow_chance', Integer(), nullable=False)
    winter_storm_chance = Column(u'winter_storm_chance', Integer(), nullable=False)
    zone = Column(u'zone', Integer(), primary_key=True, nullable=False)

    #relation definitions


class Gameobject(DeclarativeBase):
    __tablename__ = 'gameobject'

    __table_args__ = {}

    #column definitions
    animprogress = Column(u'animprogress', Integer(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    id = Column(u'id', Integer(), nullable=False)
    map = Column(u'map', SMALLINT(), nullable=False)
    orientation = Column(u'orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    phaseMask = Column(u'phaseMask', SMALLINT(), nullable=False)
    position_x = Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_y = Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_z = Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False)
    rotation0 = Column(u'rotation0', FLOAT(precision=None, asdecimal=False), nullable=False)
    rotation1 = Column(u'rotation1', FLOAT(precision=None, asdecimal=False), nullable=False)
    rotation2 = Column(u'rotation2', FLOAT(precision=None, asdecimal=False), nullable=False)
    rotation3 = Column(u'rotation3', FLOAT(precision=None, asdecimal=False), nullable=False)
    spawnMask = Column(u'spawnMask', Integer(), nullable=False)
    spawntimesecs = Column(u'spawntimesecs', INTEGER(), nullable=False)
    state = Column(u'state', Integer(), nullable=False)

    #relation definitions


class GameobjectInvolvedrelation(DeclarativeBase):
    __tablename__ = 'gameobject_involvedrelation'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameobjectLootTemplate(DeclarativeBase):
    __tablename__ = 'gameobject_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class GameobjectQuestrelation(DeclarativeBase):
    __tablename__ = 'gameobject_questrelation'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    quest = Column(u'quest', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GameobjectTemplate(DeclarativeBase):
    __tablename__ = 'gameobject_template'

    __table_args__ = {}

    #column definitions
    AIName = Column(u'AIName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    IconName = Column(u'IconName', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    ScriptName = Column(u'ScriptName', VARCHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    WDBVerified = Column(u'WDBVerified', SMALLINT())
    castBarCaption = Column(u'castBarCaption', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    data0 = Column(u'data0', INTEGER(), nullable=False)
    data1 = Column(u'data1', INTEGER(), nullable=False)
    data10 = Column(u'data10', INTEGER(), nullable=False)
    data11 = Column(u'data11', INTEGER(), nullable=False)
    data12 = Column(u'data12', INTEGER(), nullable=False)
    data13 = Column(u'data13', INTEGER(), nullable=False)
    data14 = Column(u'data14', INTEGER(), nullable=False)
    data15 = Column(u'data15', INTEGER(), nullable=False)
    data16 = Column(u'data16', INTEGER(), nullable=False)
    data17 = Column(u'data17', INTEGER(), nullable=False)
    data18 = Column(u'data18', INTEGER(), nullable=False)
    data19 = Column(u'data19', INTEGER(), nullable=False)
    data2 = Column(u'data2', INTEGER(), nullable=False)
    data20 = Column(u'data20', INTEGER(), nullable=False)
    data21 = Column(u'data21', INTEGER(), nullable=False)
    data22 = Column(u'data22', INTEGER(), nullable=False)
    data23 = Column(u'data23', INTEGER(), nullable=False)
    data3 = Column(u'data3', INTEGER(), nullable=False)
    data4 = Column(u'data4', INTEGER(), nullable=False)
    data5 = Column(u'data5', INTEGER(), nullable=False)
    data6 = Column(u'data6', INTEGER(), nullable=False)
    data7 = Column(u'data7', INTEGER(), nullable=False)
    data8 = Column(u'data8', INTEGER(), nullable=False)
    data9 = Column(u'data9', INTEGER(), nullable=False)
    displayId = Column(u'displayId', Integer(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    faction = Column(u'faction', SMALLINT(), nullable=False)
    flags = Column(u'flags', INTEGER(), nullable=False)
    name = Column(u'name', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    questItem1 = Column(u'questItem1', INTEGER(), nullable=False)
    questItem2 = Column(u'questItem2', INTEGER(), nullable=False)
    questItem3 = Column(u'questItem3', INTEGER(), nullable=False)
    questItem4 = Column(u'questItem4', INTEGER(), nullable=False)
    questItem5 = Column(u'questItem5', INTEGER(), nullable=False)
    questItem6 = Column(u'questItem6', INTEGER(), nullable=False)
    size = Column(u'size', FLOAT(precision=None, asdecimal=False), nullable=False)
    type = Column(u'type', Integer(), nullable=False)
    unk1 = Column(u'unk1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class GossipMenu(DeclarativeBase):
    __tablename__ = 'gossip_menu'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', SMALLINT(), primary_key=True, nullable=False)
    text_id = Column(u'text_id', Integer(), primary_key=True, nullable=False)

    #relation definitions


class GossipMenuOption(DeclarativeBase):
    __tablename__ = 'gossip_menu_option'

    __table_args__ = {}

    #column definitions
    action_menu_id = Column(u'action_menu_id', INTEGER(), nullable=False)
    action_poi_id = Column(u'action_poi_id', Integer(), nullable=False)
    box_coded = Column(u'box_coded', Integer(), nullable=False)
    box_money = Column(u'box_money', INTEGER(), nullable=False)
    box_text = Column(u'box_text', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    id = Column(u'id', SMALLINT(), primary_key=True, nullable=False)
    menu_id = Column(u'menu_id', SMALLINT(), primary_key=True, nullable=False)
    npc_option_npcflag = Column(u'npc_option_npcflag', INTEGER(), nullable=False)
    option_icon = Column(u'option_icon', Integer(), nullable=False)
    option_id = Column(u'option_id', Integer(), nullable=False)
    option_text = Column(u'option_text', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class InstanceEncounter(DeclarativeBase):
    __tablename__ = 'instance_encounters'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    creditEntry = Column(u'creditEntry', INTEGER(), nullable=False)
    creditType = Column(u'creditType', Integer(), nullable=False)
    entry = Column(u'entry', INTEGER(), primary_key=True, nullable=False)
    lastEncounterDungeon = Column(u'lastEncounterDungeon', SMALLINT(), nullable=False)

    #relation definitions


class InstanceTemplate(DeclarativeBase):
    __tablename__ = 'instance_template'

    __table_args__ = {}

    #column definitions
    allowMount = Column(u'allowMount', Integer(), nullable=False)
    map = Column(u'map', SMALLINT(), primary_key=True, nullable=False)
    parent = Column(u'parent', SMALLINT(), nullable=False)
    script = Column(u'script', VARCHAR(length=128, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class Ip2nationCountry(DeclarativeBase):
    __tablename__ = 'ip2nationCountries'

    __table_args__ = {}

    #column definitions
    code = Column(u'code', VARCHAR(length=4, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False)
    country = Column(u'country', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    iso_code_2 = Column(u'iso_code_2', VARCHAR(length=2, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    iso_code_3 = Column(u'iso_code_3', VARCHAR(length=3, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    iso_country = Column(u'iso_country', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    lat = Column(u'lat', FLOAT(precision=None, asdecimal=False), nullable=False)
    lon = Column(u'lon', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class ItemEnchantmentTemplate(DeclarativeBase):
    __tablename__ = 'item_enchantment_template'

    __table_args__ = {}

    #column definitions
    chance = Column(u'chance', FLOAT(precision=None, asdecimal=False), nullable=False)
    ench = Column(u'ench', Integer(), primary_key=True, nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class ItemLootTemplate(DeclarativeBase):
    __tablename__ = 'item_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class ItemSetName(DeclarativeBase):
    __tablename__ = 'item_set_names'

    __table_args__ = {}

    #column definitions
    InventoryType = Column(u'InventoryType', Integer(), nullable=False)
    WDBVerified = Column(u'WDBVerified', SMALLINT(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    name = Column(u'name', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class ItemTemplate(DeclarativeBase):
    __tablename__ = 'item_template'

    __table_args__ = {}

    #column definitions
    AllowableClass = Column(u'AllowableClass', INTEGER(), nullable=False)
    AllowableRace = Column(u'AllowableRace', INTEGER(), nullable=False)
    ArmorDamageModifier = Column(u'ArmorDamageModifier', FLOAT(precision=None, asdecimal=False), nullable=False)
    BagFamily = Column(u'BagFamily', Integer(), nullable=False)
    BuyCount = Column(u'BuyCount', Integer(), nullable=False)
    BuyPrice = Column(u'BuyPrice', BigInteger(), nullable=False)
    ContainerSlots = Column(u'ContainerSlots', Integer(), nullable=False)
    DisenchantID = Column(u'DisenchantID', Integer(), nullable=False)
    Duration = Column(u'Duration', INTEGER(), nullable=False)
    Flags = Column(u'Flags', BigInteger(), nullable=False)
    FlagsExtra = Column(u'FlagsExtra', INTEGER(), nullable=False)
    FoodType = Column(u'FoodType', Integer(), nullable=False)
    GemProperties = Column(u'GemProperties', Integer(), nullable=False)
    HolidayId = Column(u'HolidayId', INTEGER(), nullable=False)
    InventoryType = Column(u'InventoryType', Integer(), nullable=False)
    ItemLevel = Column(u'ItemLevel', SMALLINT(), nullable=False)
    ItemLimitCategory = Column(u'ItemLimitCategory', SMALLINT(), nullable=False)
    LanguageID = Column(u'LanguageID', Integer(), nullable=False)
    Map = Column(u'Map', SMALLINT(), nullable=False)
    Material = Column(u'Material', Integer(), nullable=False)
    MaxDurability = Column(u'MaxDurability', SMALLINT(), nullable=False)
    PageMaterial = Column(u'PageMaterial', Integer(), nullable=False)
    PageText = Column(u'PageText', Integer(), nullable=False)
    Quality = Column(u'Quality', Integer(), nullable=False)
    RandomProperty = Column(u'RandomProperty', Integer(), nullable=False)
    RandomSuffix = Column(u'RandomSuffix', Integer(), nullable=False)
    RangedModRange = Column(u'RangedModRange', FLOAT(precision=None, asdecimal=False), nullable=False)
    RequiredCityRank = Column(u'RequiredCityRank', Integer(), nullable=False)
    RequiredDisenchantSkill = Column(u'RequiredDisenchantSkill', SMALLINT(), nullable=False)
    RequiredLevel = Column(u'RequiredLevel', Integer(), nullable=False)
    RequiredReputationFaction = Column(u'RequiredReputationFaction', SMALLINT(), nullable=False)
    RequiredReputationRank = Column(u'RequiredReputationRank', SMALLINT(), nullable=False)
    RequiredSkill = Column(u'RequiredSkill', SMALLINT(), nullable=False)
    RequiredSkillRank = Column(u'RequiredSkillRank', SMALLINT(), nullable=False)
    ScalingStatDistribution = Column(u'ScalingStatDistribution', SMALLINT(), nullable=False)
    ScalingStatValue = Column(u'ScalingStatValue', INTEGER(), nullable=False)
    ScriptName = Column(u'ScriptName', VARCHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    SellPrice = Column(u'SellPrice', INTEGER(), nullable=False)
    StatsCount = Column(u'StatsCount', Integer(), nullable=False)
    TotemCategory = Column(u'TotemCategory', Integer(), nullable=False)
    WDBVerified = Column(u'WDBVerified', SMALLINT())
    ammo_type = Column(u'ammo_type', Integer(), nullable=False)
    arcane_res = Column(u'arcane_res', Integer(), nullable=False)
    area = Column(u'area', Integer(), nullable=False)
    armor = Column(u'armor', SMALLINT(), nullable=False)
    block = Column(u'block', Integer(), nullable=False)
    bonding = Column(u'bonding', Integer(), nullable=False)
    class_ = Column(u'class', Integer(), nullable=False)
    delay = Column(u'delay', SMALLINT(), nullable=False)
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    displayid = Column(u'displayid', Integer(), nullable=False)
    dmg_max1 = Column(u'dmg_max1', FLOAT(precision=None, asdecimal=False), nullable=False)
    dmg_max2 = Column(u'dmg_max2', FLOAT(precision=None, asdecimal=False), nullable=False)
    dmg_min1 = Column(u'dmg_min1', FLOAT(precision=None, asdecimal=False), nullable=False)
    dmg_min2 = Column(u'dmg_min2', FLOAT(precision=None, asdecimal=False), nullable=False)
    dmg_type1 = Column(u'dmg_type1', Integer(), nullable=False)
    dmg_type2 = Column(u'dmg_type2', Integer(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    fire_res = Column(u'fire_res', Integer(), nullable=False)
    frost_res = Column(u'frost_res', Integer(), nullable=False)
    holy_res = Column(u'holy_res', Integer(), nullable=False)
    itemset = Column(u'itemset', Integer(), nullable=False)
    lockid = Column(u'lockid', Integer(), nullable=False)
    maxMoneyLoot = Column(u'maxMoneyLoot', INTEGER(), nullable=False)
    maxcount = Column(u'maxcount', INTEGER(), nullable=False)
    minMoneyLoot = Column(u'minMoneyLoot', INTEGER(), nullable=False)
    name = Column(u'name', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    nature_res = Column(u'nature_res', Integer(), nullable=False)
    requiredhonorrank = Column(u'requiredhonorrank', Integer(), nullable=False)
    requiredspell = Column(u'requiredspell', Integer(), nullable=False)
    shadow_res = Column(u'shadow_res', Integer(), nullable=False)
    sheath = Column(u'sheath', Integer(), nullable=False)
    socketBonus = Column(u'socketBonus', Integer(), nullable=False)
    socketColor_1 = Column(u'socketColor_1', Integer(), nullable=False)
    socketColor_2 = Column(u'socketColor_2', Integer(), nullable=False)
    socketColor_3 = Column(u'socketColor_3', Integer(), nullable=False)
    socketContent_1 = Column(u'socketContent_1', Integer(), nullable=False)
    socketContent_2 = Column(u'socketContent_2', Integer(), nullable=False)
    socketContent_3 = Column(u'socketContent_3', Integer(), nullable=False)
    spellcategory_1 = Column(u'spellcategory_1', SMALLINT(), nullable=False)
    spellcategory_2 = Column(u'spellcategory_2', SMALLINT(), nullable=False)
    spellcategory_3 = Column(u'spellcategory_3', SMALLINT(), nullable=False)
    spellcategory_4 = Column(u'spellcategory_4', SMALLINT(), nullable=False)
    spellcategory_5 = Column(u'spellcategory_5', SMALLINT(), nullable=False)
    spellcategorycooldown_1 = Column(u'spellcategorycooldown_1', INTEGER(), nullable=False)
    spellcategorycooldown_2 = Column(u'spellcategorycooldown_2', INTEGER(), nullable=False)
    spellcategorycooldown_3 = Column(u'spellcategorycooldown_3', INTEGER(), nullable=False)
    spellcategorycooldown_4 = Column(u'spellcategorycooldown_4', INTEGER(), nullable=False)
    spellcategorycooldown_5 = Column(u'spellcategorycooldown_5', INTEGER(), nullable=False)
    spellcharges_1 = Column(u'spellcharges_1', SMALLINT())
    spellcharges_2 = Column(u'spellcharges_2', SMALLINT())
    spellcharges_3 = Column(u'spellcharges_3', SMALLINT())
    spellcharges_4 = Column(u'spellcharges_4', SMALLINT())
    spellcharges_5 = Column(u'spellcharges_5', SMALLINT())
    spellcooldown_1 = Column(u'spellcooldown_1', INTEGER(), nullable=False)
    spellcooldown_2 = Column(u'spellcooldown_2', INTEGER(), nullable=False)
    spellcooldown_3 = Column(u'spellcooldown_3', INTEGER(), nullable=False)
    spellcooldown_4 = Column(u'spellcooldown_4', INTEGER(), nullable=False)
    spellcooldown_5 = Column(u'spellcooldown_5', INTEGER(), nullable=False)
    spellid_1 = Column(u'spellid_1', Integer(), nullable=False)
    spellid_2 = Column(u'spellid_2', Integer(), nullable=False)
    spellid_3 = Column(u'spellid_3', Integer(), nullable=False)
    spellid_4 = Column(u'spellid_4', Integer(), nullable=False)
    spellid_5 = Column(u'spellid_5', Integer(), nullable=False)
    spellppmRate_1 = Column(u'spellppmRate_1', FLOAT(precision=None, asdecimal=False), nullable=False)
    spellppmRate_2 = Column(u'spellppmRate_2', FLOAT(precision=None, asdecimal=False), nullable=False)
    spellppmRate_3 = Column(u'spellppmRate_3', FLOAT(precision=None, asdecimal=False), nullable=False)
    spellppmRate_4 = Column(u'spellppmRate_4', FLOAT(precision=None, asdecimal=False), nullable=False)
    spellppmRate_5 = Column(u'spellppmRate_5', FLOAT(precision=None, asdecimal=False), nullable=False)
    spelltrigger_1 = Column(u'spelltrigger_1', Integer(), nullable=False)
    spelltrigger_2 = Column(u'spelltrigger_2', Integer(), nullable=False)
    spelltrigger_3 = Column(u'spelltrigger_3', Integer(), nullable=False)
    spelltrigger_4 = Column(u'spelltrigger_4', Integer(), nullable=False)
    spelltrigger_5 = Column(u'spelltrigger_5', Integer(), nullable=False)
    stackable = Column(u'stackable', INTEGER())
    startquest = Column(u'startquest', Integer(), nullable=False)
    stat_type1 = Column(u'stat_type1', Integer(), nullable=False)
    stat_type10 = Column(u'stat_type10', Integer(), nullable=False)
    stat_type2 = Column(u'stat_type2', Integer(), nullable=False)
    stat_type3 = Column(u'stat_type3', Integer(), nullable=False)
    stat_type4 = Column(u'stat_type4', Integer(), nullable=False)
    stat_type5 = Column(u'stat_type5', Integer(), nullable=False)
    stat_type6 = Column(u'stat_type6', Integer(), nullable=False)
    stat_type7 = Column(u'stat_type7', Integer(), nullable=False)
    stat_type8 = Column(u'stat_type8', Integer(), nullable=False)
    stat_type9 = Column(u'stat_type9', Integer(), nullable=False)
    stat_value1 = Column(u'stat_value1', SMALLINT(), nullable=False)
    stat_value10 = Column(u'stat_value10', SMALLINT(), nullable=False)
    stat_value2 = Column(u'stat_value2', SMALLINT(), nullable=False)
    stat_value3 = Column(u'stat_value3', SMALLINT(), nullable=False)
    stat_value4 = Column(u'stat_value4', SMALLINT(), nullable=False)
    stat_value5 = Column(u'stat_value5', SMALLINT(), nullable=False)
    stat_value6 = Column(u'stat_value6', SMALLINT(), nullable=False)
    stat_value7 = Column(u'stat_value7', SMALLINT(), nullable=False)
    stat_value8 = Column(u'stat_value8', SMALLINT(), nullable=False)
    stat_value9 = Column(u'stat_value9', SMALLINT(), nullable=False)
    subclass = Column(u'subclass', Integer(), nullable=False)
    SoundOverrideSubclass = Column(u'SoundOverrideSubclass', INTEGER(), nullable=False)

    #relation definitions


class LfgDungeonReward(DeclarativeBase):
    __tablename__ = 'lfg_dungeon_rewards'

    __table_args__ = {}

    #column definitions
    dungeonId = Column(u'dungeonId', INTEGER(), primary_key=True, nullable=False)
    firstMoneyVar = Column(u'firstMoneyVar', INTEGER(), nullable=False)
    firstQuestId = Column(u'firstQuestId', INTEGER(), nullable=False)
    firstXPVar = Column(u'firstXPVar', INTEGER(), nullable=False)
    maxLevel = Column(u'maxLevel', Integer(), primary_key=True, nullable=False)
    otherMoneyVar = Column(u'otherMoneyVar', INTEGER(), nullable=False)
    otherQuestId = Column(u'otherQuestId', INTEGER(), nullable=False)
    otherXPVar = Column(u'otherXPVar', INTEGER(), nullable=False)

    #relation definitions


class LinkedRespawn(DeclarativeBase):
    __tablename__ = 'linked_respawn'

    __table_args__ = {}

    #column definitions
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    linkType = Column(u'linkType', Integer(), primary_key=True, nullable=False)
    linkedGuid = Column(u'linkedGuid', INTEGER(), nullable=False)

    #relation definitions


class LocalesAchievementReward(DeclarativeBase):
    __tablename__ = 'locales_achievement_reward'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    subject_loc1 = Column(u'subject_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc2 = Column(u'subject_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc3 = Column(u'subject_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc4 = Column(u'subject_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc5 = Column(u'subject_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc6 = Column(u'subject_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc7 = Column(u'subject_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subject_loc8 = Column(u'subject_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    text_loc1 = Column(u'text_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc2 = Column(u'text_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc3 = Column(u'text_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc4 = Column(u'text_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc5 = Column(u'text_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc6 = Column(u'text_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc7 = Column(u'text_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc8 = Column(u'text_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class LocalesCreature(DeclarativeBase):
    __tablename__ = 'locales_creature'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    name_loc1 = Column(u'name_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc2 = Column(u'name_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc3 = Column(u'name_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc4 = Column(u'name_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc5 = Column(u'name_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc6 = Column(u'name_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc7 = Column(u'name_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc8 = Column(u'name_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    subname_loc1 = Column(u'subname_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc2 = Column(u'subname_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc3 = Column(u'subname_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc4 = Column(u'subname_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc5 = Column(u'subname_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc6 = Column(u'subname_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc7 = Column(u'subname_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    subname_loc8 = Column(u'subname_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class LocalesCreatureText(DeclarativeBase):
    __tablename__ = 'locales_creature_text'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', INTEGER(), primary_key=True, nullable=False)
    id = Column(u'id', INTEGER(), primary_key=True, nullable=False)
    textGroup = Column(u'textGroup', Integer(), primary_key=True, nullable=False)
    text_loc1 = Column(u'text_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc2 = Column(u'text_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc3 = Column(u'text_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc4 = Column(u'text_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc5 = Column(u'text_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc6 = Column(u'text_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc7 = Column(u'text_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    text_loc8 = Column(u'text_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class LocalesGameobject(DeclarativeBase):
    __tablename__ = 'locales_gameobject'

    __table_args__ = {}

    #column definitions
    castbarcaption_loc1 = Column(u'castbarcaption_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc2 = Column(u'castbarcaption_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc3 = Column(u'castbarcaption_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc4 = Column(u'castbarcaption_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc5 = Column(u'castbarcaption_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc6 = Column(u'castbarcaption_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc7 = Column(u'castbarcaption_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    castbarcaption_loc8 = Column(u'castbarcaption_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    name_loc1 = Column(u'name_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc2 = Column(u'name_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc3 = Column(u'name_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc4 = Column(u'name_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc5 = Column(u'name_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc6 = Column(u'name_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc7 = Column(u'name_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc8 = Column(u'name_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class LocalesGossipMenuOption(DeclarativeBase):
    __tablename__ = 'locales_gossip_menu_option'

    __table_args__ = {}

    #column definitions
    box_text_loc1 = Column(u'box_text_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc2 = Column(u'box_text_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc3 = Column(u'box_text_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc4 = Column(u'box_text_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc5 = Column(u'box_text_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc6 = Column(u'box_text_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc7 = Column(u'box_text_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    box_text_loc8 = Column(u'box_text_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    id = Column(u'id', SMALLINT(), primary_key=True, nullable=False)
    menu_id = Column(u'menu_id', SMALLINT(), primary_key=True, nullable=False)
    option_text_loc1 = Column(u'option_text_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc2 = Column(u'option_text_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc3 = Column(u'option_text_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc4 = Column(u'option_text_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc5 = Column(u'option_text_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc6 = Column(u'option_text_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc7 = Column(u'option_text_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    option_text_loc8 = Column(u'option_text_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class LocalesItem(DeclarativeBase):
    __tablename__ = 'locales_item'

    __table_args__ = {}

    #column definitions
    description_loc1 = Column(u'description_loc1', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc2 = Column(u'description_loc2', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc3 = Column(u'description_loc3', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc4 = Column(u'description_loc4', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc5 = Column(u'description_loc5', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc6 = Column(u'description_loc6', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc7 = Column(u'description_loc7', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    description_loc8 = Column(u'description_loc8', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    name_loc1 = Column(u'name_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc2 = Column(u'name_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc3 = Column(u'name_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc4 = Column(u'name_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc5 = Column(u'name_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc6 = Column(u'name_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc7 = Column(u'name_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc8 = Column(u'name_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class LocalesItemSetName(DeclarativeBase):
    __tablename__ = 'locales_item_set_names'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    name_loc1 = Column(u'name_loc1', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc2 = Column(u'name_loc2', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc3 = Column(u'name_loc3', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc4 = Column(u'name_loc4', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc5 = Column(u'name_loc5', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc6 = Column(u'name_loc6', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc7 = Column(u'name_loc7', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    name_loc8 = Column(u'name_loc8', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class LocalesNpcText(DeclarativeBase):
    __tablename__ = 'locales_npc_text'

    __table_args__ = {}

    #column definitions
    Text0_0_loc1 = Column(u'Text0_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc2 = Column(u'Text0_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc3 = Column(u'Text0_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc4 = Column(u'Text0_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc5 = Column(u'Text0_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc6 = Column(u'Text0_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc7 = Column(u'Text0_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_0_loc8 = Column(u'Text0_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc1 = Column(u'Text0_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc2 = Column(u'Text0_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc3 = Column(u'Text0_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc4 = Column(u'Text0_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc5 = Column(u'Text0_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc6 = Column(u'Text0_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc7 = Column(u'Text0_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text0_1_loc8 = Column(u'Text0_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc1 = Column(u'Text1_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc2 = Column(u'Text1_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc3 = Column(u'Text1_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc4 = Column(u'Text1_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc5 = Column(u'Text1_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc6 = Column(u'Text1_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc7 = Column(u'Text1_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_0_loc8 = Column(u'Text1_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc1 = Column(u'Text1_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc2 = Column(u'Text1_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc3 = Column(u'Text1_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc4 = Column(u'Text1_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc5 = Column(u'Text1_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc6 = Column(u'Text1_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc7 = Column(u'Text1_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text1_1_loc8 = Column(u'Text1_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc1 = Column(u'Text2_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc2 = Column(u'Text2_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc3 = Column(u'Text2_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc4 = Column(u'Text2_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc5 = Column(u'Text2_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc6 = Column(u'Text2_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc7 = Column(u'Text2_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_0_loc8 = Column(u'Text2_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc1 = Column(u'Text2_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc2 = Column(u'Text2_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc3 = Column(u'Text2_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc4 = Column(u'Text2_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc5 = Column(u'Text2_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc6 = Column(u'Text2_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc7 = Column(u'Text2_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text2_1_loc8 = Column(u'Text2_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc1 = Column(u'Text3_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc2 = Column(u'Text3_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc3 = Column(u'Text3_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc4 = Column(u'Text3_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc5 = Column(u'Text3_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc6 = Column(u'Text3_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc7 = Column(u'Text3_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_0_loc8 = Column(u'Text3_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc1 = Column(u'Text3_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc2 = Column(u'Text3_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc3 = Column(u'Text3_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc4 = Column(u'Text3_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc5 = Column(u'Text3_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc6 = Column(u'Text3_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc7 = Column(u'Text3_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text3_1_loc8 = Column(u'Text3_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc1 = Column(u'Text4_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc2 = Column(u'Text4_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc3 = Column(u'Text4_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc4 = Column(u'Text4_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc5 = Column(u'Text4_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc6 = Column(u'Text4_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc7 = Column(u'Text4_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_0_loc8 = Column(u'Text4_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc1 = Column(u'Text4_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc2 = Column(u'Text4_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc3 = Column(u'Text4_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc4 = Column(u'Text4_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc5 = Column(u'Text4_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc6 = Column(u'Text4_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc7 = Column(u'Text4_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text4_1_loc8 = Column(u'Text4_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc1 = Column(u'Text5_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc2 = Column(u'Text5_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc3 = Column(u'Text5_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc4 = Column(u'Text5_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc5 = Column(u'Text5_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc6 = Column(u'Text5_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc7 = Column(u'Text5_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_0_loc8 = Column(u'Text5_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc1 = Column(u'Text5_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc2 = Column(u'Text5_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc3 = Column(u'Text5_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc4 = Column(u'Text5_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc5 = Column(u'Text5_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc6 = Column(u'Text5_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc7 = Column(u'Text5_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text5_1_loc8 = Column(u'Text5_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc1 = Column(u'Text6_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc2 = Column(u'Text6_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc3 = Column(u'Text6_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc4 = Column(u'Text6_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc5 = Column(u'Text6_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc6 = Column(u'Text6_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc7 = Column(u'Text6_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_0_loc8 = Column(u'Text6_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc1 = Column(u'Text6_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc2 = Column(u'Text6_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc3 = Column(u'Text6_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc4 = Column(u'Text6_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc5 = Column(u'Text6_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc6 = Column(u'Text6_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc7 = Column(u'Text6_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text6_1_loc8 = Column(u'Text6_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc1 = Column(u'Text7_0_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc2 = Column(u'Text7_0_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc3 = Column(u'Text7_0_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc4 = Column(u'Text7_0_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc5 = Column(u'Text7_0_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc6 = Column(u'Text7_0_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc7 = Column(u'Text7_0_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_0_loc8 = Column(u'Text7_0_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc1 = Column(u'Text7_1_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc2 = Column(u'Text7_1_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc3 = Column(u'Text7_1_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc4 = Column(u'Text7_1_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc5 = Column(u'Text7_1_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc6 = Column(u'Text7_1_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc7 = Column(u'Text7_1_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text7_1_loc8 = Column(u'Text7_1_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class LocalesPageText(DeclarativeBase):
    __tablename__ = 'locales_page_text'

    __table_args__ = {}

    #column definitions
    Text_loc1 = Column(u'Text_loc1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc2 = Column(u'Text_loc2', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc3 = Column(u'Text_loc3', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc4 = Column(u'Text_loc4', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc5 = Column(u'Text_loc5', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc6 = Column(u'Text_loc6', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc7 = Column(u'Text_loc7', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Text_loc8 = Column(u'Text_loc8', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class LocalesPointsOfInterest(DeclarativeBase):
    __tablename__ = 'locales_points_of_interest'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    icon_name_loc1 = Column(u'icon_name_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc2 = Column(u'icon_name_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc3 = Column(u'icon_name_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc4 = Column(u'icon_name_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc5 = Column(u'icon_name_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc6 = Column(u'icon_name_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc7 = Column(u'icon_name_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    icon_name_loc8 = Column(u'icon_name_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class LocalesQuest(DeclarativeBase):
    __tablename__ = 'locales_quest'

    __table_args__ = {}

    #column definitions
    CompletedText_loc1 = Column(u'CompletedText_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc2 = Column(u'CompletedText_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc3 = Column(u'CompletedText_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc4 = Column(u'CompletedText_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc5 = Column(u'CompletedText_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc6 = Column(u'CompletedText_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc7 = Column(u'CompletedText_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    CompletedText_loc8 = Column(u'CompletedText_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc1 = Column(u'Details_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc2 = Column(u'Details_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc3 = Column(u'Details_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc4 = Column(u'Details_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc5 = Column(u'Details_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc6 = Column(u'Details_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc7 = Column(u'Details_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details_loc8 = Column(u'Details_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc1 = Column(u'EndText_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc2 = Column(u'EndText_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc3 = Column(u'EndText_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc4 = Column(u'EndText_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc5 = Column(u'EndText_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc6 = Column(u'EndText_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc7 = Column(u'EndText_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    EndText_loc8 = Column(u'EndText_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc1 = Column(u'ObjectiveText1_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc2 = Column(u'ObjectiveText1_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc3 = Column(u'ObjectiveText1_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc4 = Column(u'ObjectiveText1_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc5 = Column(u'ObjectiveText1_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc6 = Column(u'ObjectiveText1_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc7 = Column(u'ObjectiveText1_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText1_loc8 = Column(u'ObjectiveText1_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc1 = Column(u'ObjectiveText2_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc2 = Column(u'ObjectiveText2_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc3 = Column(u'ObjectiveText2_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc4 = Column(u'ObjectiveText2_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc5 = Column(u'ObjectiveText2_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc6 = Column(u'ObjectiveText2_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc7 = Column(u'ObjectiveText2_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2_loc8 = Column(u'ObjectiveText2_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc1 = Column(u'ObjectiveText3_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc2 = Column(u'ObjectiveText3_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc3 = Column(u'ObjectiveText3_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc4 = Column(u'ObjectiveText3_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc5 = Column(u'ObjectiveText3_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc6 = Column(u'ObjectiveText3_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc7 = Column(u'ObjectiveText3_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3_loc8 = Column(u'ObjectiveText3_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc1 = Column(u'ObjectiveText4_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc2 = Column(u'ObjectiveText4_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc3 = Column(u'ObjectiveText4_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc4 = Column(u'ObjectiveText4_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc5 = Column(u'ObjectiveText4_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc6 = Column(u'ObjectiveText4_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc7 = Column(u'ObjectiveText4_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4_loc8 = Column(u'ObjectiveText4_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc1 = Column(u'Objectives_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc2 = Column(u'Objectives_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc3 = Column(u'Objectives_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc4 = Column(u'Objectives_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc5 = Column(u'Objectives_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc6 = Column(u'Objectives_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc7 = Column(u'Objectives_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives_loc8 = Column(u'Objectives_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc1 = Column(u'OfferRewardText_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc2 = Column(u'OfferRewardText_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc3 = Column(u'OfferRewardText_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc4 = Column(u'OfferRewardText_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc5 = Column(u'OfferRewardText_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc6 = Column(u'OfferRewardText_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc7 = Column(u'OfferRewardText_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardText_loc8 = Column(u'OfferRewardText_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc1 = Column(u'RequestItemsText_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc2 = Column(u'RequestItemsText_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc3 = Column(u'RequestItemsText_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc4 = Column(u'RequestItemsText_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc5 = Column(u'RequestItemsText_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc6 = Column(u'RequestItemsText_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc7 = Column(u'RequestItemsText_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequestItemsText_loc8 = Column(u'RequestItemsText_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc1 = Column(u'Title_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc2 = Column(u'Title_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc3 = Column(u'Title_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc4 = Column(u'Title_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc5 = Column(u'Title_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc6 = Column(u'Title_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc7 = Column(u'Title_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Title_loc8 = Column(u'Title_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class MailLevelReward(DeclarativeBase):
    __tablename__ = 'mail_level_reward'

    __table_args__ = {}

    #column definitions
    level = Column(u'level', Integer(), primary_key=True, nullable=False)
    mailTemplateId = Column(u'mailTemplateId', Integer(), nullable=False)
    raceMask = Column(u'raceMask', Integer(), primary_key=True, nullable=False)
    senderEntry = Column(u'senderEntry', Integer(), nullable=False)

    #relation definitions


class MailLootTemplate(DeclarativeBase):
    __tablename__ = 'mail_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class MillingLootTemplate(DeclarativeBase):
    __tablename__ = 'milling_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class NpcSpellclickSpell(DeclarativeBase):
    __tablename__ = 'npc_spellclick_spells'

    __table_args__ = {}

    #column definitions
    cast_flags = Column(u'cast_flags', Integer(), nullable=False)
    npc_entry = Column(u'npc_entry', INTEGER(), primary_key=True, nullable=False)
    spell_id = Column(u'spell_id', INTEGER(), primary_key=True, nullable=False)
    user_type = Column(u'user_type', SMALLINT(), nullable=False)

    #relation definitions


class NpcText(DeclarativeBase):
    __tablename__ = 'npc_text'

    __table_args__ = {}

    #column definitions
    ID = Column(u'ID', Integer(), primary_key=True, nullable=False)
    WDBVerified = Column(u'WDBVerified', SMALLINT(), default=1)
    em0_0 = Column(u'em0_0', SMALLINT(), nullable=False, default=0)
    em0_1 = Column(u'em0_1', SMALLINT(), nullable=False, default=0)
    em0_2 = Column(u'em0_2', SMALLINT(), nullable=False, default=0)
    em0_3 = Column(u'em0_3', SMALLINT(), nullable=False, default=0)
    em0_4 = Column(u'em0_4', SMALLINT(), nullable=False, default=0)
    em0_5 = Column(u'em0_5', SMALLINT(), nullable=False, default=0)
    em1_0 = Column(u'em1_0', SMALLINT(), nullable=False, default=0)
    em1_1 = Column(u'em1_1', SMALLINT(), nullable=False, default=0)
    em1_2 = Column(u'em1_2', SMALLINT(), nullable=False, default=0)
    em1_3 = Column(u'em1_3', SMALLINT(), nullable=False, default=0)
    em1_4 = Column(u'em1_4', SMALLINT(), nullable=False, default=0)
    em1_5 = Column(u'em1_5', SMALLINT(), nullable=False, default=0)
    em2_0 = Column(u'em2_0', SMALLINT(), nullable=False, default=0)
    em2_1 = Column(u'em2_1', SMALLINT(), nullable=False, default=0)
    em2_2 = Column(u'em2_2', SMALLINT(), nullable=False, default=0)
    em2_3 = Column(u'em2_3', SMALLINT(), nullable=False, default=0)
    em2_4 = Column(u'em2_4', SMALLINT(), nullable=False, default=0)
    em2_5 = Column(u'em2_5', SMALLINT(), nullable=False, default=0)
    em3_0 = Column(u'em3_0', SMALLINT(), nullable=False, default=0)
    em3_1 = Column(u'em3_1', SMALLINT(), nullable=False, default=0)
    em3_2 = Column(u'em3_2', SMALLINT(), nullable=False, default=0)
    em3_3 = Column(u'em3_3', SMALLINT(), nullable=False, default=0)
    em3_4 = Column(u'em3_4', SMALLINT(), nullable=False, default=0)
    em3_5 = Column(u'em3_5', SMALLINT(), nullable=False, default=0)
    em4_0 = Column(u'em4_0', SMALLINT(), nullable=False, default=0)
    em4_1 = Column(u'em4_1', SMALLINT(), nullable=False, default=0)
    em4_2 = Column(u'em4_2', SMALLINT(), nullable=False, default=0)
    em4_3 = Column(u'em4_3', SMALLINT(), nullable=False, default=0)
    em4_4 = Column(u'em4_4', SMALLINT(), nullable=False, default=0)
    em4_5 = Column(u'em4_5', SMALLINT(), nullable=False, default=0)
    em5_0 = Column(u'em5_0', SMALLINT(), nullable=False, default=0)
    em5_1 = Column(u'em5_1', SMALLINT(), nullable=False, default=0)
    em5_2 = Column(u'em5_2', SMALLINT(), nullable=False, default=0)
    em5_3 = Column(u'em5_3', SMALLINT(), nullable=False, default=0)
    em5_4 = Column(u'em5_4', SMALLINT(), nullable=False, default=0)
    em5_5 = Column(u'em5_5', SMALLINT(), nullable=False, default=0)
    em6_0 = Column(u'em6_0', SMALLINT(), nullable=False, default=0)
    em6_1 = Column(u'em6_1', SMALLINT(), nullable=False, default=0)
    em6_2 = Column(u'em6_2', SMALLINT(), nullable=False, default=0)
    em6_3 = Column(u'em6_3', SMALLINT(), nullable=False, default=0)
    em6_4 = Column(u'em6_4', SMALLINT(), nullable=False, default=0)
    em6_5 = Column(u'em6_5', SMALLINT(), nullable=False, default=0)
    em7_0 = Column(u'em7_0', SMALLINT(), nullable=False, default=0)
    em7_1 = Column(u'em7_1', SMALLINT(), nullable=False, default=0)
    em7_2 = Column(u'em7_2', SMALLINT(), nullable=False, default=0)
    em7_3 = Column(u'em7_3', SMALLINT(), nullable=False, default=0)
    em7_4 = Column(u'em7_4', SMALLINT(), nullable=False, default=0)
    em7_5 = Column(u'em7_5', SMALLINT(), nullable=False, default=0)
    lang0 = Column(u'lang0', Integer(), nullable=False, default=0)
    lang1 = Column(u'lang1', Integer(), nullable=False, default=0)
    lang2 = Column(u'lang2', Integer(), nullable=False, default=0)
    lang3 = Column(u'lang3', Integer(), nullable=False, default=0)
    lang4 = Column(u'lang4', Integer(), nullable=False, default=0)
    lang5 = Column(u'lang5', Integer(), nullable=False, default=0)
    lang6 = Column(u'lang6', Integer(), nullable=False, default=0)
    lang7 = Column(u'lang7', Integer(), nullable=False, default=0)
    prob0 = Column(u'prob0', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob1 = Column(u'prob1', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob2 = Column(u'prob2', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob3 = Column(u'prob3', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob4 = Column(u'prob4', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob5 = Column(u'prob5', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob6 = Column(u'prob6', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    prob7 = Column(u'prob7', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    text0_0 = Column(u'text0_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text0_1 = Column(u'text0_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text1_0 = Column(u'text1_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text1_1 = Column(u'text1_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text2_0 = Column(u'text2_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text2_1 = Column(u'text2_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text3_0 = Column(u'text3_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text3_1 = Column(u'text3_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text4_0 = Column(u'text4_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text4_1 = Column(u'text4_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text5_0 = Column(u'text5_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text5_1 = Column(u'text5_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text6_0 = Column(u'text6_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text6_1 = Column(u'text6_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text7_0 = Column(u'text7_0', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)
    text7_1 = Column(u'text7_1', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), default=None)

    #relation definitions


class NpcTrainer(DeclarativeBase):
    __tablename__ = 'npc_trainer'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    reqlevel = Column(u'reqlevel', Integer(), nullable=False)
    reqskill = Column(u'reqskill', SMALLINT(), nullable=False)
    reqskillvalue = Column(u'reqskillvalue', SMALLINT(), nullable=False)
    spell = Column(u'spell', Integer(), primary_key=True, nullable=False)
    spellcost = Column(u'spellcost', INTEGER(), nullable=False)

    #relation definitions


class NpcVendor(DeclarativeBase):
    __tablename__ = 'npc_vendor'

    __table_args__ = {}

    #column definitions
    ExtendedCost = Column(u'ExtendedCost', Integer(), primary_key=True, nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    incrtime = Column(u'incrtime', INTEGER(), nullable=False, default=0)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False, default=0)
    slot = Column(u'slot', SMALLINT(), nullable=False, default=0)

    #relation definitions


class OutdoorpvpTemplate(DeclarativeBase):
    __tablename__ = 'outdoorpvp_template'

    __table_args__ = {}

    #column definitions
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    TypeId = Column(u'TypeId', Integer(), primary_key=True, nullable=False)
    comment = Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))

    #relation definitions


class PageText(DeclarativeBase):
    __tablename__ = 'page_text'

    __table_args__ = {}

    #column definitions
    WDBVerified = Column(u'WDBVerified', SMALLINT())
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    next_page = Column(u'next_page', Integer(), nullable=False)
    text = Column(u'text', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class PetLevelstat(DeclarativeBase):
    __tablename__ = 'pet_levelstats'

    __table_args__ = {}

    #column definitions
    agi = Column(u'agi', SMALLINT(), nullable=False)
    armor = Column(u'armor', INTEGER(), nullable=False)
    creature_entry = Column(u'creature_entry', Integer(), primary_key=True, nullable=False)
    hp = Column(u'hp', SMALLINT(), nullable=False)
    inte = Column(u'inte', SMALLINT(), nullable=False)
    level = Column(u'level', Integer(), primary_key=True, nullable=False)
    mana = Column(u'mana', SMALLINT(), nullable=False)
    spi = Column(u'spi', SMALLINT(), nullable=False)
    sta = Column(u'sta', SMALLINT(), nullable=False)
    str = Column(u'str', SMALLINT(), nullable=False)

    #relation definitions


class PetNameGeneration(DeclarativeBase):
    __tablename__ = 'pet_name_generation'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), nullable=False)
    half = Column(u'half', Integer(), nullable=False)
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    word = Column(u'word', String(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class PickpocketingLootTemplate(DeclarativeBase):
    __tablename__ = 'pickpocketing_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class PlayerClasslevelstat(DeclarativeBase):
    __tablename__ = 'player_classlevelstats'

    __table_args__ = {}

    #column definitions
    basehp = Column(u'basehp', SMALLINT(), nullable=False)
    basemana = Column(u'basemana', SMALLINT(), nullable=False)
    class_ = Column(u'class', Integer(), primary_key=True, nullable=False)
    level = Column(u'level', Integer(), primary_key=True, nullable=False)

    #relation definitions


class PlayerFactionchangeAchievement(DeclarativeBase):
    __tablename__ = 'player_factionchange_achievement'

    __table_args__ = {}

    #column definitions
    alliance_id = Column(u'alliance_id', INTEGER(), primary_key=True, nullable=False)
    horde_id = Column(u'horde_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class PlayerFactionchangeItem(DeclarativeBase):
    __tablename__ = 'player_factionchange_items'

    __table_args__ = {}

    #column definitions
    alliance_id = Column(u'alliance_id', INTEGER(), primary_key=True, nullable=False)
    commentA = Column(u'commentA', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    commentH = Column(u'commentH', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    horde_id = Column(u'horde_id', INTEGER(), primary_key=True, nullable=False)
    race_A = Column(u'race_A', INTEGER(), nullable=False)
    race_H = Column(u'race_H', INTEGER(), nullable=False)

    #relation definitions


class PlayerFactionchangeReputation(DeclarativeBase):
    __tablename__ = 'player_factionchange_reputations'

    __table_args__ = {}

    #column definitions
    alliance_id = Column(u'alliance_id', INTEGER(), primary_key=True, nullable=False)
    horde_id = Column(u'horde_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class PlayerFactionchangeSpell(DeclarativeBase):
    __tablename__ = 'player_factionchange_spells'

    __table_args__ = {}

    #column definitions
    alliance_id = Column(u'alliance_id', INTEGER(), primary_key=True, nullable=False)
    horde_id = Column(u'horde_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class PlayerLevelstat(DeclarativeBase):
    __tablename__ = 'player_levelstats'

    __table_args__ = {}

    #column definitions
    agi = Column(u'agi', Integer(), nullable=False)
    class_ = Column(u'class', Integer(), primary_key=True, nullable=False)
    inte = Column(u'inte', Integer(), nullable=False)
    level = Column(u'level', Integer(), primary_key=True, nullable=False)
    race = Column(u'race', Integer(), primary_key=True, nullable=False)
    spi = Column(u'spi', Integer(), nullable=False)
    sta = Column(u'sta', Integer(), nullable=False)
    str = Column(u'str', Integer(), nullable=False)

    #relation definitions


class PlayerXpForLevel(DeclarativeBase):
    __tablename__ = 'player_xp_for_level'

    __table_args__ = {}

    #column definitions
    lvl = Column(u'lvl', Integer(), primary_key=True, nullable=False)
    xp_for_next_level = Column(u'xp_for_next_level', INTEGER(), nullable=False)

    #relation definitions


class Playercreateinfo(DeclarativeBase):
    __tablename__ = 'playercreateinfo'

    __table_args__ = {}

    #column definitions
    class_ = Column(u'class', Integer(), primary_key=True, nullable=False)
    map = Column(u'map', SMALLINT(), nullable=False)
    orientation = Column(u'orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_x = Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_y = Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_z = Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False)
    race = Column(u'race', Integer(), primary_key=True, nullable=False)
    zone = Column(u'zone', Integer(), nullable=False)

    #relation definitions

class PlayercreateinfoItem(DeclarativeBase):
    __tablename__ = 'playercreateinfo_item'

    __table_args__ = {}

    #column definitions
    class_ = Column(u'class', Integer(), nullable=False, primary_key=True)
    race = Column(u'race', SMALLINT(), nullable=False, primary_key=True)
    itemid = Column(u'itemid', Integer(), nullable=False, primary_key=True)
    amount = Column(u'amount', SMALLINT(), nullable=False)


class PlayercreateinfoAction(DeclarativeBase):
    __tablename__ = 'playercreateinfo_action'

    __table_args__ = {}

    #column definitions
    action = Column(u'action', INTEGER(), nullable=False)
    button = Column(u'button', SMALLINT(), primary_key=True, nullable=False)
    class_ = Column(u'class', Integer(), primary_key=True, nullable=False)
    race = Column(u'race', Integer(), primary_key=True, nullable=False)
    type = Column(u'type', SMALLINT(), nullable=False)

    #relation definitions


class PlayercreateinfoSpell(DeclarativeBase):
    __tablename__ = 'playercreateinfo_spell'

    __table_args__ = {}

    #column definitions
    Note = Column(u'Note', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Spell = Column(u'Spell', Integer(), primary_key=True, nullable=False)
    class_ = Column(u'class', Integer(), primary_key=True, nullable=False)
    race = Column(u'race', Integer(), primary_key=True, nullable=False)

    #relation definitions


class PlayercreateinfoSpellCustom(DeclarativeBase):
    __tablename__ = 'playercreateinfo_spell_custom'

    __table_args__ = {}

    #column definitions
    Note = Column(u'Note', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Spell = Column(u'Spell', Integer(), primary_key=True, nullable=False)
    class_ = Column(u'class', Integer(), primary_key=True, nullable=False)
    race = Column(u'race', Integer(), primary_key=True, nullable=False)

    #relation definitions


class PointsOfInterest(DeclarativeBase):
    __tablename__ = 'points_of_interest'

    __table_args__ = {}

    #column definitions
    data = Column(u'data', Integer(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    flags = Column(u'flags', Integer(), nullable=False)
    icon = Column(u'icon', Integer(), nullable=False)
    icon_name = Column(u'icon_name', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    x = Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False)
    y = Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class PoolCreature(DeclarativeBase):
    __tablename__ = 'pool_creature'

    __table_args__ = {}

    #column definitions
    chance = Column(u'chance', FLOAT(precision=None, asdecimal=False), nullable=False)
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    pool_entry = Column(u'pool_entry', Integer(), nullable=False)

    #relation definitions


class PoolGameobject(DeclarativeBase):
    __tablename__ = 'pool_gameobject'

    __table_args__ = {}

    #column definitions
    chance = Column(u'chance', FLOAT(precision=None, asdecimal=False), nullable=False)
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    pool_entry = Column(u'pool_entry', Integer(), nullable=False)

    #relation definitions


class PoolPool(DeclarativeBase):
    __tablename__ = 'pool_pool'

    __table_args__ = {}

    #column definitions
    chance = Column(u'chance', FLOAT(precision=None, asdecimal=False), nullable=False)
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    mother_pool = Column(u'mother_pool', Integer(), nullable=False)
    pool_id = Column(u'pool_id', Integer(), primary_key=True, nullable=False)

    #relation definitions


class PoolQuest(DeclarativeBase):
    __tablename__ = 'pool_quest'

    __table_args__ = {}

    #column definitions
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', INTEGER(), primary_key=True, nullable=False)
    pool_entry = Column(u'pool_entry', Integer(), nullable=False)

    #relation definitions


class PoolTemplate(DeclarativeBase):
    __tablename__ = 'pool_template'

    __table_args__ = {}

    #column definitions
    description = Column(u'description', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    max_limit = Column(u'max_limit', INTEGER(), nullable=False)

    #relation definitions


class ProspectingLootTemplate(DeclarativeBase):
    __tablename__ = 'prospecting_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class QuestTemplate(DeclarativeBase):
    __tablename__ = 'quest_template'

    __table_args__ = {}

    #column definitions
    CompleteScript = Column(u'CompleteScript', Integer(), nullable=False, default=0)
    CompletedText = Column(u'CompletedText', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Details = Column(u'Details', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    DetailsEmote1 = Column(u'DetailsEmote1', SMALLINT(), nullable=False, default=0)
    DetailsEmote2 = Column(u'DetailsEmote2', SMALLINT(), nullable=False, default=0)
    DetailsEmote3 = Column(u'DetailsEmote3', SMALLINT(), nullable=False, default=0)
    DetailsEmote4 = Column(u'DetailsEmote4', SMALLINT(), nullable=False, default=0)
    DetailsEmoteDelay1 = Column(u'DetailsEmoteDelay1', INTEGER(), nullable=False, default=0)
    DetailsEmoteDelay2 = Column(u'DetailsEmoteDelay2', INTEGER(), nullable=False, default=0)
    DetailsEmoteDelay3 = Column(u'DetailsEmoteDelay3', INTEGER(), nullable=False, default=0)
    DetailsEmoteDelay4 = Column(u'DetailsEmoteDelay4', INTEGER(), nullable=False, default=0)
    EmoteOnComplete = Column(u'EmoteOnComplete', SMALLINT(), nullable=False, default=0)
    EmoteOnIncomplete = Column(u'EmoteOnIncomplete', SMALLINT(), nullable=False, default=0)
    EndText = Column(u'EndText', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ExclusiveGroup = Column(u'ExclusiveGroup', Integer(), nullable=False, default=0)
    Flags = Column(u'Flags', INTEGER(), nullable=False, default=0)
    Id = Column(u'Id', Integer(), primary_key=True, nullable=False, default=0)
    Level = Column(u'Level', SMALLINT(), nullable=False, default=0)
    LimitTime = Column(u'LimitTime', INTEGER(), nullable=False, default=0)
    MaxLevel = Column(u'MaxLevel', Integer(), nullable=False, default=0)
    Method = Column(u'Method', Integer(), nullable=False, default=0)
    MinLevel = Column(u'MinLevel', Integer(), nullable=False, default=0)
    NextQuestId = Column(u'NextQuestId', Integer(), nullable=False, default=0)
    NextQuestIdChain = Column(u'NextQuestIdChain', Integer(), nullable=False, default=0)
    ObjectiveText1 = Column(u'ObjectiveText1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText2 = Column(u'ObjectiveText2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText3 = Column(u'ObjectiveText3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    ObjectiveText4 = Column(u'ObjectiveText4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Objectives = Column(u'Objectives', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    OfferRewardEmote1 = Column(u'OfferRewardEmote1', SMALLINT(), nullable=False, default=0)
    OfferRewardEmote2 = Column(u'OfferRewardEmote2', SMALLINT(), nullable=False, default=0)
    OfferRewardEmote3 = Column(u'OfferRewardEmote3', SMALLINT(), nullable=False, default=0)
    OfferRewardEmote4 = Column(u'OfferRewardEmote4', SMALLINT(), nullable=False, default=0)
    OfferRewardEmoteDelay1 = Column(u'OfferRewardEmoteDelay1', INTEGER(), nullable=False, default=0)
    OfferRewardEmoteDelay2 = Column(u'OfferRewardEmoteDelay2', INTEGER(), nullable=False, default=0)
    OfferRewardEmoteDelay3 = Column(u'OfferRewardEmoteDelay3', INTEGER(), nullable=False, default=0)
    OfferRewardEmoteDelay4 = Column(u'OfferRewardEmoteDelay4', INTEGER(), nullable=False, default=0)
    OfferRewardText = Column(u'OfferRewardText', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    PointMapId = Column(u'PointMapId', SMALLINT(), nullable=False, default=0)
    PointOption = Column(u'PointOption', Integer(), nullable=False, default=0)
    PointX = Column(u'PointX', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    PointY = Column(u'PointY', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    PrevQuestId = Column(u'PrevQuestId', Integer(), nullable=False, default=0)
    RequestItemsText = Column(u'RequestItemsText', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    RequiredClasses = Column(u'RequiredClasses', SMALLINT(), nullable=False, default=0)
    RequiredFactionId1 = Column(u'RequiredFactionId1', SMALLINT(), nullable=False, default=0)
    RequiredFactionId2 = Column(u'RequiredFactionId2', SMALLINT(), nullable=False, default=0)
    RequiredFactionValue1 = Column(u'RequiredFactionValue1', Integer(), nullable=False, default=0)
    RequiredFactionValue2 = Column(u'RequiredFactionValue2', Integer(), nullable=False, default=0)
    RequiredItemCount1 = Column(u'RequiredItemCount1', SMALLINT(), nullable=False, default=0)
    RequiredItemCount2 = Column(u'RequiredItemCount2', SMALLINT(), nullable=False, default=0)
    RequiredItemCount3 = Column(u'RequiredItemCount3', SMALLINT(), nullable=False, default=0)
    RequiredItemCount4 = Column(u'RequiredItemCount4', SMALLINT(), nullable=False, default=0)
    RequiredItemCount5 = Column(u'RequiredItemCount5', SMALLINT(), nullable=False, default=0)
    RequiredItemCount6 = Column(u'RequiredItemCount6', SMALLINT(), nullable=False, default=0)
    RequiredItemId1 = Column(u'RequiredItemId1', Integer(), nullable=False, default=0)
    RequiredItemId2 = Column(u'RequiredItemId2', Integer(), nullable=False, default=0)
    RequiredItemId3 = Column(u'RequiredItemId3', Integer(), nullable=False, default=0)
    RequiredItemId4 = Column(u'RequiredItemId4', Integer(), nullable=False, default=0)
    RequiredItemId5 = Column(u'RequiredItemId5', Integer(), nullable=False, default=0)
    RequiredItemId6 = Column(u'RequiredItemId6', Integer(), nullable=False, default=0)
    RequiredMaxRepFaction = Column(u'RequiredMaxRepFaction', SMALLINT(), nullable=False, default=0)
    RequiredMaxRepValue = Column(u'RequiredMaxRepValue', Integer(), nullable=False, default=0)
    RequiredMinRepFaction = Column(u'RequiredMinRepFaction', SMALLINT(), nullable=False, default=0)
    RequiredMinRepValue = Column(u'RequiredMinRepValue', Integer(), nullable=False, default=0)
    RequiredNpcOrGo1 = Column(u'RequiredNpcOrGo1', Integer(), nullable=False, default=0)
    RequiredNpcOrGo2 = Column(u'RequiredNpcOrGo2', Integer(), nullable=False, default=0)
    RequiredNpcOrGo3 = Column(u'RequiredNpcOrGo3', Integer(), nullable=False, default=0)
    RequiredNpcOrGo4 = Column(u'RequiredNpcOrGo4', Integer(), nullable=False, default=0)
    RequiredNpcOrGoCount1 = Column(u'RequiredNpcOrGoCount1', SMALLINT(), nullable=False, default=0)
    RequiredNpcOrGoCount2 = Column(u'RequiredNpcOrGoCount2', SMALLINT(), nullable=False, default=0)
    RequiredNpcOrGoCount3 = Column(u'RequiredNpcOrGoCount3', SMALLINT(), nullable=False, default=0)
    RequiredNpcOrGoCount4 = Column(u'RequiredNpcOrGoCount4', SMALLINT(), nullable=False, default=0)
    RequiredPlayerKills = Column(u'RequiredPlayerKills', Integer(), nullable=False, default=0)
    RequiredRaces = Column(u'RequiredRaces', SMALLINT(), nullable=False, default=0)
    RequiredSkillId = Column(u'RequiredSkillId', SMALLINT(), nullable=False, default=0)
    RequiredSkillPoints = Column(u'RequiredSkillPoints', SMALLINT(), nullable=False, default=0)
    RequiredSourceItemCount1 = Column(u'RequiredSourceItemCount1', SMALLINT(), nullable=False, default=0)
    RequiredSourceItemCount2 = Column(u'RequiredSourceItemCount2', SMALLINT(), nullable=False, default=0)
    RequiredSourceItemCount3 = Column(u'RequiredSourceItemCount3', SMALLINT(), nullable=False, default=0)
    RequiredSourceItemCount4 = Column(u'RequiredSourceItemCount4', SMALLINT(), nullable=False, default=0)
    RequiredSourceItemId1 = Column(u'RequiredSourceItemId1', Integer(), nullable=False, default=0)
    RequiredSourceItemId2 = Column(u'RequiredSourceItemId2', Integer(), nullable=False, default=0)
    RequiredSourceItemId3 = Column(u'RequiredSourceItemId3', Integer(), nullable=False, default=0)
    RequiredSourceItemId4 = Column(u'RequiredSourceItemId4', Integer(), nullable=False, default=0)
    RequiredSpellCast1 = Column(u'RequiredSpellCast1', Integer(), nullable=False, default=0)
    RequiredSpellCast2 = Column(u'RequiredSpellCast2', Integer(), nullable=False, default=0)
    RequiredSpellCast3 = Column(u'RequiredSpellCast3', Integer(), nullable=False, default=0)
    RequiredSpellCast4 = Column(u'RequiredSpellCast4', Integer(), nullable=False, default=0)
    RewardArenaPoints = Column(u'RewardArenaPoints', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemCount1 = Column(u'RewardChoiceItemCount1', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemCount2 = Column(u'RewardChoiceItemCount2', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemCount3 = Column(u'RewardChoiceItemCount3', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemCount4 = Column(u'RewardChoiceItemCount4', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemCount5 = Column(u'RewardChoiceItemCount5', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemCount6 = Column(u'RewardChoiceItemCount6', SMALLINT(), nullable=False, default=0)
    RewardChoiceItemId1 = Column(u'RewardChoiceItemId1', Integer(), nullable=False, default=0)
    RewardChoiceItemId2 = Column(u'RewardChoiceItemId2', Integer(), nullable=False, default=0)
    RewardChoiceItemId3 = Column(u'RewardChoiceItemId3', Integer(), nullable=False, default=0)
    RewardChoiceItemId4 = Column(u'RewardChoiceItemId4', Integer(), nullable=False, default=0)
    RewardChoiceItemId5 = Column(u'RewardChoiceItemId5', Integer(), nullable=False, default=0)
    RewardChoiceItemId6 = Column(u'RewardChoiceItemId6', Integer(), nullable=False, default=0)
    RewardFactionId1 = Column(u'RewardFactionId1', SMALLINT(), nullable=False, default=0)
    RewardFactionId2 = Column(u'RewardFactionId2', SMALLINT(), nullable=False, default=0)
    RewardFactionId3 = Column(u'RewardFactionId3', SMALLINT(), nullable=False, default=0)
    RewardFactionId4 = Column(u'RewardFactionId4', SMALLINT(), nullable=False, default=0)
    RewardFactionId5 = Column(u'RewardFactionId5', SMALLINT(), nullable=False, default=0)
    RewardFactionValueId1 = Column(u'RewardFactionValueId1', Integer(), nullable=False, default=0)
    RewardFactionValueId2 = Column(u'RewardFactionValueId2', Integer(), nullable=False, default=0)
    RewardFactionValueId3 = Column(u'RewardFactionValueId3', Integer(), nullable=False, default=0)
    RewardFactionValueId4 = Column(u'RewardFactionValueId4', Integer(), nullable=False, default=0)
    RewardFactionValueId5 = Column(u'RewardFactionValueId5', Integer(), nullable=False, default=0)
    RewardFactionValueIdOverride1 = Column(u'RewardFactionValueIdOverride1', Integer(), nullable=False, default=0)
    RewardFactionValueIdOverride2 = Column(u'RewardFactionValueIdOverride2', Integer(), nullable=False, default=0)
    RewardFactionValueIdOverride3 = Column(u'RewardFactionValueIdOverride3', Integer(), nullable=False, default=0)
    RewardFactionValueIdOverride4 = Column(u'RewardFactionValueIdOverride4', Integer(), nullable=False, default=0)
    RewardFactionValueIdOverride5 = Column(u'RewardFactionValueIdOverride5', Integer(), nullable=False, default=0)
    RewardHonor = Column(u'RewardHonor', INTEGER(), nullable=False, default=0)
    RewardHonorMultiplier = Column(u'RewardHonorMultiplier', FLOAT(precision=None, asdecimal=False), nullable=False, default=0)
    RewardItemCount1 = Column(u'RewardItemCount1', SMALLINT(), nullable=False, default=0)
    RewardItemCount2 = Column(u'RewardItemCount2', SMALLINT(), nullable=False, default=0)
    RewardItemCount3 = Column(u'RewardItemCount3', SMALLINT(), nullable=False, default=0)
    RewardItemCount4 = Column(u'RewardItemCount4', SMALLINT(), nullable=False, default=0)
    RewardItemId1 = Column(u'RewardItemId1', Integer(), nullable=False, default=0)
    RewardItemId2 = Column(u'RewardItemId2', Integer(), nullable=False, default=0)
    RewardItemId3 = Column(u'RewardItemId3', Integer(), nullable=False, default=0)
    RewardItemId4 = Column(u'RewardItemId4', Integer(), nullable=False, default=0)
    RewardMailDelay = Column(u'RewardMailDelay', INTEGER(), nullable=False, default=0)
    RewardMailTemplateId = Column(u'RewardMailTemplateId', Integer(), nullable=False, default=0)
    RewardMoneyMaxLevel = Column(u'RewardMoneyMaxLevel', INTEGER(), nullable=False, default=0)
    RewardOrRequiredMoney = Column(u'RewardOrRequiredMoney', INTEGER(), nullable=False, default=0)
    RewardSpell = Column(u'RewardSpell', Integer(), nullable=False, default=0)
    RewardSpellCast = Column(u'RewardSpellCast', INTEGER(), nullable=False, default=0)
    RewardTalents = Column(u'RewardTalents', Integer(), nullable=False, default=0)
    RewardTitleId = Column(u'RewardTitleId', Integer(), nullable=False, default=0)
    RewardXPId = Column(u'RewardXPId', Integer(), nullable=False, default=0)
    SourceItemCount = Column(u'SourceItemCount', Integer(), nullable=False, default=0)
    SourceItemId = Column(u'SourceItemId', Integer(), nullable=False, default=0)
    SourceSpellId = Column(u'SourceSpellId', Integer(), nullable=False, default=0)
    SpecialFlags = Column(u'SpecialFlags', Integer(), nullable=False, default=0)
    StartScript = Column(u'StartScript', Integer(), nullable=False, default=0)
    SuggestedPlayers = Column(u'SuggestedPlayers', Integer(), nullable=False, default=0)
    Title = Column(u'Title', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    Type = Column(u'Type', SMALLINT(), nullable=False, default=0)
    Unknown0 = Column(u'Unknown0', Integer(), nullable=False, default=0)
    WDBVerified = Column(u'WDBVerified', SMALLINT(), nullable=False, default=0)
    ZoneOrSort = Column(u'ZoneOrSort', SMALLINT(), nullable=False, default=0)

    #relation definitions


class ReferenceLootTemplate(DeclarativeBase):
    __tablename__ = 'reference_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class ReputationRewardRate(DeclarativeBase):
    __tablename__ = 'reputation_reward_rate'

    __table_args__ = {}

    #column definitions
    creature_rate = Column(u'creature_rate', FLOAT(precision=None, asdecimal=False), nullable=False)
    faction = Column(u'faction', Integer(), primary_key=True, nullable=False)
    quest_rate = Column(u'quest_rate', FLOAT(precision=None, asdecimal=False), nullable=False)
    spell_rate = Column(u'spell_rate', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class ReputationSpilloverTemplate(DeclarativeBase):
    __tablename__ = 'reputation_spillover_template'

    __table_args__ = {}

    #column definitions
    faction = Column(u'faction', SMALLINT(), primary_key=True, nullable=False)
    faction1 = Column(u'faction1', SMALLINT(), nullable=False)
    faction2 = Column(u'faction2', SMALLINT(), nullable=False)
    faction3 = Column(u'faction3', SMALLINT(), nullable=False)
    faction4 = Column(u'faction4', SMALLINT(), nullable=False)
    rank_1 = Column(u'rank_1', Integer(), nullable=False)
    rank_2 = Column(u'rank_2', Integer(), nullable=False)
    rank_3 = Column(u'rank_3', Integer(), nullable=False)
    rank_4 = Column(u'rank_4', Integer(), nullable=False)
    rate_1 = Column(u'rate_1', FLOAT(precision=None, asdecimal=False), nullable=False)
    rate_2 = Column(u'rate_2', FLOAT(precision=None, asdecimal=False), nullable=False)
    rate_3 = Column(u'rate_3', FLOAT(precision=None, asdecimal=False), nullable=False)
    rate_4 = Column(u'rate_4', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class ScriptText(DeclarativeBase):
    __tablename__ = 'script_texts'

    __table_args__ = {}

    #column definitions
    comment = Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_default = Column(u'content_default', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    content_loc1 = Column(u'content_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc2 = Column(u'content_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc3 = Column(u'content_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc4 = Column(u'content_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc5 = Column(u'content_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc6 = Column(u'content_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc7 = Column(u'content_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc8 = Column(u'content_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    emote = Column(u'emote', SMALLINT(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    language = Column(u'language', Integer(), nullable=False)
    npc_entry = Column(u'npc_entry', Integer(), primary_key=True, nullable=False)
    sound = Column(u'sound', Integer(), nullable=False)
    type = Column(u'type', Integer(), nullable=False)

    #relation definitions


class ScriptWaypoint(DeclarativeBase):
    __tablename__ = 'script_waypoint'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    location_x = Column(u'location_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    location_y = Column(u'location_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    location_z = Column(u'location_z', FLOAT(precision=None, asdecimal=False), nullable=False)
    point_comment = Column(u'point_comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    pointid = Column(u'pointid', Integer(), primary_key=True, nullable=False)
    waittime = Column(u'waittime', INTEGER(), nullable=False)

    #relation definitions


class SkillDiscoveryTemplate(DeclarativeBase):
    __tablename__ = 'skill_discovery_template'

    __table_args__ = {}

    #column definitions
    chance = Column(u'chance', FLOAT(precision=None, asdecimal=False), nullable=False)
    reqSkillValue = Column(u'reqSkillValue', SMALLINT(), nullable=False)
    reqSpell = Column(u'reqSpell', Integer(), primary_key=True, nullable=False)
    spellId = Column(u'spellId', Integer(), primary_key=True, nullable=False)

    #relation definitions


class SkillExtraItemTemplate(DeclarativeBase):
    __tablename__ = 'skill_extra_item_template'

    __table_args__ = {}

    #column definitions
    additionalCreateChance = Column(u'additionalCreateChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    additionalMaxNum = Column(u'additionalMaxNum', Integer(), nullable=False)
    requiredSpecialization = Column(u'requiredSpecialization', Integer(), nullable=False)
    spellId = Column(u'spellId', Integer(), primary_key=True, nullable=False)

    #relation definitions


class SkillFishingBaseLevel(DeclarativeBase):
    __tablename__ = 'skill_fishing_base_level'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    skill = Column(u'skill', SMALLINT(), nullable=False)

    #relation definitions


class SkinningLootTemplate(DeclarativeBase):
    __tablename__ = 'skinning_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class SmartScript(DeclarativeBase):
    __tablename__ = 'smart_scripts'

    __table_args__ = {}

    #column definitions
    action_param1 = Column(u'action_param1', INTEGER(), nullable=False)
    action_param2 = Column(u'action_param2', INTEGER(), nullable=False)
    action_param3 = Column(u'action_param3', INTEGER(), nullable=False)
    action_param4 = Column(u'action_param4', INTEGER(), nullable=False)
    action_param5 = Column(u'action_param5', INTEGER(), nullable=False)
    action_param6 = Column(u'action_param6', INTEGER(), nullable=False)
    action_type = Column(u'action_type', Integer(), nullable=False)
    comment = Column(u'comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    entryorguid = Column(u'entryorguid', INTEGER(), primary_key=True, nullable=False)
    event_chance = Column(u'event_chance', Integer(), nullable=False)
    event_flags = Column(u'event_flags', Integer(), nullable=False)
    event_param1 = Column(u'event_param1', INTEGER(), nullable=False)
    event_param2 = Column(u'event_param2', INTEGER(), nullable=False)
    event_param3 = Column(u'event_param3', INTEGER(), nullable=False)
    event_param4 = Column(u'event_param4', INTEGER(), nullable=False)
    event_phase_mask = Column(u'event_phase_mask', Integer(), nullable=False)
    event_type = Column(u'event_type', Integer(), nullable=False)
    id = Column(u'id', SMALLINT(), primary_key=True, nullable=False)
    link = Column(u'link', SMALLINT(), primary_key=True, nullable=False)
    source_type = Column(u'source_type', Integer(), primary_key=True, nullable=False)
    target_o = Column(u'target_o', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_param1 = Column(u'target_param1', INTEGER(), nullable=False)
    target_param2 = Column(u'target_param2', INTEGER(), nullable=False)
    target_param3 = Column(u'target_param3', INTEGER(), nullable=False)
    target_type = Column(u'target_type', Integer(), nullable=False)
    target_x = Column(u'target_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_y = Column(u'target_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_z = Column(u'target_z', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class SpellArea(DeclarativeBase):
    __tablename__ = 'spell_area'

    __table_args__ = {}

    #column definitions
    area = Column(u'area', Integer(), primary_key=True, nullable=False)
    aura_spell = Column(u'aura_spell', Integer(), primary_key=True, nullable=False)
    autocast = Column(u'autocast', Integer(), nullable=False)
    gender = Column(u'gender', Integer(), primary_key=True, nullable=False)
    quest_end = Column(u'quest_end', Integer(), nullable=False)
    quest_start = Column(u'quest_start', Integer(), primary_key=True, nullable=False)
    quest_start_active = Column(u'quest_start_active', Integer(), primary_key=True, nullable=False)
    racemask = Column(u'racemask', Integer(), primary_key=True, nullable=False)
    spell = Column(u'spell', Integer(), primary_key=True, nullable=False)

    #relation definitions


class SpellBonusData(DeclarativeBase):
    __tablename__ = 'spell_bonus_data'

    __table_args__ = {}

    #column definitions
    ap_bonus = Column(u'ap_bonus', FLOAT(precision=None, asdecimal=False), nullable=False)
    ap_dot_bonus = Column(u'ap_dot_bonus', FLOAT(precision=None, asdecimal=False), nullable=False)
    comments = Column(u'comments', VARCHAR(length=255, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    direct_bonus = Column(u'direct_bonus', FLOAT(precision=None, asdecimal=False), nullable=False)
    dot_bonus = Column(u'dot_bonus', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class SpellDbc(DeclarativeBase):
    __tablename__ = 'spell_dbc'

    __table_args__ = {}

    #column definitions
    AreaGroupId = Column(u'AreaGroupId', INTEGER(), nullable=False)
    Attributes = Column(u'Attributes', INTEGER(), nullable=False)
    AttributesEx = Column(u'AttributesEx', INTEGER(), nullable=False)
    AttributesEx2 = Column(u'AttributesEx2', INTEGER(), nullable=False)
    AttributesEx3 = Column(u'AttributesEx3', INTEGER(), nullable=False)
    AttributesEx4 = Column(u'AttributesEx4', INTEGER(), nullable=False)
    AttributesEx5 = Column(u'AttributesEx5', INTEGER(), nullable=False)
    AttributesEx6 = Column(u'AttributesEx6', INTEGER(), nullable=False)
    AttributesEx7 = Column(u'AttributesEx7', INTEGER(), nullable=False)
    AuraInterruptFlags = Column(u'AuraInterruptFlags', INTEGER(), nullable=False)
    BaseLevel = Column(u'BaseLevel', INTEGER(), nullable=False)
    CastingTimeIndex = Column(u'CastingTimeIndex', INTEGER(), nullable=False)
    Comment = Column(u'Comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    Dispel = Column(u'Dispel', INTEGER(), nullable=False)
    DmgClass = Column(u'DmgClass', INTEGER(), nullable=False)
    DmgMultiplier1 = Column(u'DmgMultiplier1', FLOAT(precision=None, asdecimal=False), nullable=False)
    DmgMultiplier2 = Column(u'DmgMultiplier2', FLOAT(precision=None, asdecimal=False), nullable=False)
    DmgMultiplier3 = Column(u'DmgMultiplier3', FLOAT(precision=None, asdecimal=False), nullable=False)
    DurationIndex = Column(u'DurationIndex', INTEGER(), nullable=False)
    Effect1 = Column(u'Effect1', INTEGER(), nullable=False)
    Effect2 = Column(u'Effect2', INTEGER(), nullable=False)
    Effect3 = Column(u'Effect3', INTEGER(), nullable=False)
    EffectAmplitude1 = Column(u'EffectAmplitude1', INTEGER(), nullable=False)
    EffectAmplitude2 = Column(u'EffectAmplitude2', INTEGER(), nullable=False)
    EffectAmplitude3 = Column(u'EffectAmplitude3', INTEGER(), nullable=False)
    EffectApplyAuraName1 = Column(u'EffectApplyAuraName1', INTEGER(), nullable=False)
    EffectApplyAuraName2 = Column(u'EffectApplyAuraName2', INTEGER(), nullable=False)
    EffectApplyAuraName3 = Column(u'EffectApplyAuraName3', INTEGER(), nullable=False)
    EffectBasePoints1 = Column(u'EffectBasePoints1', INTEGER(), nullable=False)
    EffectBasePoints2 = Column(u'EffectBasePoints2', INTEGER(), nullable=False)
    EffectBasePoints3 = Column(u'EffectBasePoints3', INTEGER(), nullable=False)
    EffectDieSides1 = Column(u'EffectDieSides1', INTEGER(), nullable=False)
    EffectDieSides2 = Column(u'EffectDieSides2', INTEGER(), nullable=False)
    EffectDieSides3 = Column(u'EffectDieSides3', INTEGER(), nullable=False)
    EffectImplicitTargetA1 = Column(u'EffectImplicitTargetA1', INTEGER(), nullable=False)
    EffectImplicitTargetA2 = Column(u'EffectImplicitTargetA2', INTEGER(), nullable=False)
    EffectImplicitTargetA3 = Column(u'EffectImplicitTargetA3', INTEGER(), nullable=False)
    EffectImplicitTargetB1 = Column(u'EffectImplicitTargetB1', INTEGER(), nullable=False)
    EffectImplicitTargetB2 = Column(u'EffectImplicitTargetB2', INTEGER(), nullable=False)
    EffectImplicitTargetB3 = Column(u'EffectImplicitTargetB3', INTEGER(), nullable=False)
    EffectMechanic1 = Column(u'EffectMechanic1', INTEGER(), nullable=False)
    EffectMechanic2 = Column(u'EffectMechanic2', INTEGER(), nullable=False)
    EffectMechanic3 = Column(u'EffectMechanic3', INTEGER(), nullable=False)
    EffectMiscValue1 = Column(u'EffectMiscValue1', INTEGER(), nullable=False)
    EffectMiscValue2 = Column(u'EffectMiscValue2', INTEGER(), nullable=False)
    EffectMiscValue3 = Column(u'EffectMiscValue3', INTEGER(), nullable=False)
    EffectMiscValueB1 = Column(u'EffectMiscValueB1', INTEGER(), nullable=False)
    EffectMiscValueB2 = Column(u'EffectMiscValueB2', INTEGER(), nullable=False)
    EffectMiscValueB3 = Column(u'EffectMiscValueB3', INTEGER(), nullable=False)
    EffectMultipleValue1 = Column(u'EffectMultipleValue1', FLOAT(precision=None, asdecimal=False), nullable=False)
    EffectMultipleValue2 = Column(u'EffectMultipleValue2', FLOAT(precision=None, asdecimal=False), nullable=False)
    EffectMultipleValue3 = Column(u'EffectMultipleValue3', FLOAT(precision=None, asdecimal=False), nullable=False)
    EffectRadiusIndex1 = Column(u'EffectRadiusIndex1', INTEGER(), nullable=False)
    EffectRadiusIndex2 = Column(u'EffectRadiusIndex2', INTEGER(), nullable=False)
    EffectRadiusIndex3 = Column(u'EffectRadiusIndex3', INTEGER(), nullable=False)
    EffectRealPointsPerLevel1 = Column(u'EffectRealPointsPerLevel1', FLOAT(precision=None, asdecimal=False), nullable=False)
    EffectRealPointsPerLevel2 = Column(u'EffectRealPointsPerLevel2', FLOAT(precision=None, asdecimal=False), nullable=False)
    EffectRealPointsPerLevel3 = Column(u'EffectRealPointsPerLevel3', FLOAT(precision=None, asdecimal=False), nullable=False)
    EffectSpellClassMaskA1 = Column(u'EffectSpellClassMaskA1', INTEGER(), nullable=False)
    EffectSpellClassMaskA2 = Column(u'EffectSpellClassMaskA2', INTEGER(), nullable=False)
    EffectSpellClassMaskA3 = Column(u'EffectSpellClassMaskA3', INTEGER(), nullable=False)
    EffectSpellClassMaskB1 = Column(u'EffectSpellClassMaskB1', INTEGER(), nullable=False)
    EffectSpellClassMaskB2 = Column(u'EffectSpellClassMaskB2', INTEGER(), nullable=False)
    EffectSpellClassMaskB3 = Column(u'EffectSpellClassMaskB3', INTEGER(), nullable=False)
    EffectSpellClassMaskC1 = Column(u'EffectSpellClassMaskC1', INTEGER(), nullable=False)
    EffectSpellClassMaskC2 = Column(u'EffectSpellClassMaskC2', INTEGER(), nullable=False)
    EffectSpellClassMaskC3 = Column(u'EffectSpellClassMaskC3', INTEGER(), nullable=False)
    EffectTriggerSpell1 = Column(u'EffectTriggerSpell1', INTEGER(), nullable=False)
    EffectTriggerSpell2 = Column(u'EffectTriggerSpell2', INTEGER(), nullable=False)
    EffectTriggerSpell3 = Column(u'EffectTriggerSpell3', INTEGER(), nullable=False)
    EquippedItemClass = Column(u'EquippedItemClass', INTEGER(), nullable=False)
    EquippedItemInventoryTypeMask = Column(u'EquippedItemInventoryTypeMask', INTEGER(), nullable=False)
    EquippedItemSubClassMask = Column(u'EquippedItemSubClassMask', INTEGER(), nullable=False)
    Id = Column(u'Id', INTEGER(), primary_key=True, nullable=False)
    MaxAffectedTargets = Column(u'MaxAffectedTargets', INTEGER(), nullable=False)
    MaxLevel = Column(u'MaxLevel', INTEGER(), nullable=False)
    MaxTargetLevel = Column(u'MaxTargetLevel', INTEGER(), nullable=False)
    Mechanic = Column(u'Mechanic', INTEGER(), nullable=False)
    PreventionType = Column(u'PreventionType', INTEGER(), nullable=False)
    ProcChance = Column(u'ProcChance', INTEGER(), nullable=False)
    ProcCharges = Column(u'ProcCharges', INTEGER(), nullable=False)
    ProcFlags = Column(u'ProcFlags', INTEGER(), nullable=False)
    RangeIndex = Column(u'RangeIndex', INTEGER(), nullable=False)
    SchoolMask = Column(u'SchoolMask', INTEGER(), nullable=False)
    SpellFamilyFlags1 = Column(u'SpellFamilyFlags1', INTEGER(), nullable=False)
    SpellFamilyFlags2 = Column(u'SpellFamilyFlags2', INTEGER(), nullable=False)
    SpellFamilyFlags3 = Column(u'SpellFamilyFlags3', INTEGER(), nullable=False)
    SpellFamilyName = Column(u'SpellFamilyName', INTEGER(), nullable=False)
    SpellLevel = Column(u'SpellLevel', INTEGER(), nullable=False)
    StackAmount = Column(u'StackAmount', INTEGER(), nullable=False)
    Stances = Column(u'Stances', INTEGER(), nullable=False)
    StancesNot = Column(u'StancesNot', INTEGER(), nullable=False)
    Targets = Column(u'Targets', INTEGER(), nullable=False)

    #relation definitions


class SpellGroup(DeclarativeBase):
    __tablename__ = 'spell_group'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', INTEGER(), primary_key=True, nullable=False)
    spell_id = Column(u'spell_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class SpellGroupStackRule(DeclarativeBase):
    __tablename__ = 'spell_group_stack_rules'

    __table_args__ = {}

    #column definitions
    group_id = Column(u'group_id', INTEGER(), primary_key=True, nullable=False)
    stack_rule = Column(u'stack_rule', Integer(), nullable=False)

    #relation definitions


class SpellLearnSpell(DeclarativeBase):
    __tablename__ = 'spell_learn_spell'

    __table_args__ = {}

    #column definitions
    Active = Column(u'Active', Integer(), nullable=False)
    SpellID = Column(u'SpellID', SMALLINT(), primary_key=True, nullable=False)
    entry = Column(u'entry', SMALLINT(), primary_key=True, nullable=False)

    #relation definitions


class SpellLootTemplate(DeclarativeBase):
    __tablename__ = 'spell_loot_template'

    __table_args__ = {}

    #column definitions
    ChanceOrQuestChance = Column(u'ChanceOrQuestChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    groupid = Column(u'groupid', Integer(), nullable=False)
    item = Column(u'item', Integer(), primary_key=True, nullable=False)
    lootmode = Column(u'lootmode', SMALLINT(), nullable=False)
    maxcount = Column(u'maxcount', Integer(), nullable=False)
    mincountOrRef = Column(u'mincountOrRef', Integer(), nullable=False)

    #relation definitions


class SpellPetAura(DeclarativeBase):
    __tablename__ = 'spell_pet_auras'

    __table_args__ = {}

    #column definitions
    aura = Column(u'aura', Integer(), nullable=False)
    effectId = Column(u'effectId', Integer(), primary_key=True, nullable=False)
    pet = Column(u'pet', Integer(), primary_key=True, nullable=False)
    spell = Column(u'spell', Integer(), primary_key=True, nullable=False)

    #relation definitions


class SpellProc(DeclarativeBase):
    __tablename__ = 'spell_proc'

    __table_args__ = {}

    #column definitions
    attributesMask = Column(u'attributesMask', INTEGER(), nullable=False)
    chance = Column(u'chance', FLOAT(precision=None, asdecimal=False), nullable=False)
    charges = Column(u'charges', INTEGER(), nullable=False)
    cooldown = Column(u'cooldown', FLOAT(precision=None, asdecimal=False), nullable=False)
    hitMask = Column(u'hitMask', INTEGER(), nullable=False)
    ratePerMinute = Column(u'ratePerMinute', FLOAT(precision=None, asdecimal=False), nullable=False)
    schoolMask = Column(u'schoolMask', Integer(), nullable=False)
    spellFamilyMask0 = Column(u'spellFamilyMask0', INTEGER(), nullable=False)
    spellFamilyMask1 = Column(u'spellFamilyMask1', INTEGER(), nullable=False)
    spellFamilyMask2 = Column(u'spellFamilyMask2', INTEGER(), nullable=False)
    spellFamilyName = Column(u'spellFamilyName', SMALLINT(), nullable=False)
    spellId = Column(u'spellId', Integer(), primary_key=True, nullable=False)
    spellPhaseMask = Column(u'spellPhaseMask', INTEGER(), nullable=False)
    spellTypeMask = Column(u'spellTypeMask', INTEGER(), nullable=False)
    typeMask = Column(u'typeMask', INTEGER(), nullable=False)

    #relation definitions


class SpellProcEvent(DeclarativeBase):
    __tablename__ = 'spell_proc_event'

    __table_args__ = {}

    #column definitions
    Cooldown = Column(u'Cooldown', INTEGER(), nullable=False)
    CustomChance = Column(u'CustomChance', FLOAT(precision=None, asdecimal=False), nullable=False)
    SchoolMask = Column(u'SchoolMask', Integer(), nullable=False)
    SpellFamilyMask0 = Column(u'SpellFamilyMask0', INTEGER(), nullable=False)
    SpellFamilyMask1 = Column(u'SpellFamilyMask1', INTEGER(), nullable=False)
    SpellFamilyMask2 = Column(u'SpellFamilyMask2', INTEGER(), nullable=False)
    SpellFamilyName = Column(u'SpellFamilyName', SMALLINT(), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    ppmRate = Column(u'ppmRate', FLOAT(precision=None, asdecimal=False), nullable=False)
    procEx = Column(u'procEx', INTEGER(), nullable=False)
    procFlags = Column(u'procFlags', INTEGER(), nullable=False)

    #relation definitions


class SpellRank(DeclarativeBase):
    __tablename__ = 'spell_ranks'

    __table_args__ = {}

    #column definitions
    first_spell_id = Column(u'first_spell_id', INTEGER(), primary_key=True, nullable=False)
    rank = Column(u'rank', Integer(), primary_key=True, nullable=False)
    spell_id = Column(u'spell_id', INTEGER(), nullable=False)

    #relation definitions


class SpellRequired(DeclarativeBase):
    __tablename__ = 'spell_required'

    __table_args__ = {}

    #column definitions
    req_spell = Column(u'req_spell', Integer(), primary_key=True, nullable=False)
    spell_id = Column(u'spell_id', Integer(), primary_key=True, nullable=False)

    #relation definitions


class SpellTargetPosition(DeclarativeBase):
    __tablename__ = 'spell_target_position'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', Integer(), primary_key=True, nullable=False)
    target_map = Column(u'target_map', SMALLINT(), nullable=False)
    target_orientation = Column(u'target_orientation', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_position_x = Column(u'target_position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_position_y = Column(u'target_position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    target_position_z = Column(u'target_position_z', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class SpellThreat(DeclarativeBase):
    __tablename__ = 'spell_threat'

    __table_args__ = {}

    #column definitions
    apPctMod = Column(u'apPctMod', FLOAT(precision=None, asdecimal=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    flatMod = Column(u'flatMod', INTEGER())
    pctMod = Column(u'pctMod', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class SpelldifficultyDbc(DeclarativeBase):
    __tablename__ = 'spelldifficulty_dbc'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', INTEGER(), primary_key=True, nullable=False)
    spellid0 = Column(u'spellid0', INTEGER(), nullable=False)
    spellid1 = Column(u'spellid1', INTEGER(), nullable=False)
    spellid2 = Column(u'spellid2', INTEGER(), nullable=False)
    spellid3 = Column(u'spellid3', INTEGER(), nullable=False)

    #relation definitions


class Transport(DeclarativeBase):
    __tablename__ = 'transports'

    __table_args__ = {}

    #column definitions
    ScriptName = Column(u'ScriptName', CHAR(length=64, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    entry = Column(u'entry', Integer(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    name = Column(u'name', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    period = Column(u'period', Integer(), nullable=False)

    #relation definitions


class TrinityString(DeclarativeBase):
    __tablename__ = 'trinity_string'

    __table_args__ = {}

    #column definitions
    content_default = Column(u'content_default', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    content_loc1 = Column(u'content_loc1', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc2 = Column(u'content_loc2', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc3 = Column(u'content_loc3', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc4 = Column(u'content_loc4', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc5 = Column(u'content_loc5', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc6 = Column(u'content_loc6', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc7 = Column(u'content_loc7', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    content_loc8 = Column(u'content_loc8', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)

    #relation definitions


class VehicleAccessory(DeclarativeBase):
    __tablename__ = 'vehicle_accessory'

    __table_args__ = {}

    #column definitions
    accessory_entry = Column(u'accessory_entry', Integer(), nullable=False)
    description = Column(u'description', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    guid = Column(u'guid', Integer(), primary_key=True, nullable=False)
    minion = Column(u'minion', Integer(), nullable=False)
    seat_id = Column(u'seat_id', Integer(), primary_key=True, nullable=False)
    summontimer = Column(u'summontimer', INTEGER(), nullable=False)
    summontype = Column(u'summontype', Integer(), nullable=False)

    #relation definitions


class VehicleTemplateAccessory(DeclarativeBase):
    __tablename__ = 'vehicle_template_accessory'

    __table_args__ = {}

    #column definitions
    accessory_entry = Column(u'accessory_entry', Integer(), nullable=False)
    description = Column(u'description', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    minion = Column(u'minion', Integer(), nullable=False)
    seat_id = Column(u'seat_id', Integer(), primary_key=True, nullable=False)
    summontimer = Column(u'summontimer', INTEGER(), nullable=False)
    summontype = Column(u'summontype', Integer(), nullable=False)

    #relation definitions


class WardenCheck(DeclarativeBase):
    __tablename__ = 'warden_checks'

    __table_args__ = {}

    #column definitions
    address = Column(u'address', INTEGER())
    comment = Column(u'comment', VARCHAR(length=50, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    data = Column(u'data', VARCHAR(length=48, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    id = Column(u'id', SMALLINT(), primary_key=True, nullable=False)
    length = Column(u'length', Integer())
    result = Column(u'result', VARCHAR(length=24, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    str = Column(u'str', VARCHAR(length=20, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    type = Column(u'type', Integer())

    #relation definitions


class Waypoint(DeclarativeBase):
    __tablename__ = 'waypoints'

    __table_args__ = {}

    #column definitions
    entry = Column(u'entry', Integer(), primary_key=True, nullable=False)
    point_comment = Column(u'point_comment', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    pointid = Column(u'pointid', Integer(), primary_key=True, nullable=False)
    position_x = Column(u'position_x', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_y = Column(u'position_y', FLOAT(precision=None, asdecimal=False), nullable=False)
    position_z = Column(u'position_z', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


class WaypointScript(DeclarativeBase):
    __tablename__ = 'waypoint_scripts'

    __table_args__ = {}

    #column definitions
    command = Column(u'command', INTEGER(), nullable=False)
    dataint = Column(u'dataint', INTEGER(), nullable=False)
    datalong = Column(u'datalong', INTEGER(), nullable=False)
    datalong2 = Column(u'datalong2', INTEGER(), nullable=False)
    delay = Column(u'delay', INTEGER(), nullable=False)
    guid = Column(u'guid', INTEGER(), primary_key=True, nullable=False)
    id = Column(u'id', INTEGER(), nullable=False)
    o = Column(u'o', FLOAT(precision=None, asdecimal=False), nullable=False)
    x = Column(u'x', FLOAT(precision=None, asdecimal=False), nullable=False)
    y = Column(u'y', FLOAT(precision=None, asdecimal=False), nullable=False)
    z = Column(u'z', FLOAT(precision=None, asdecimal=False), nullable=False)

    #relation definitions


